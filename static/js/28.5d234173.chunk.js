(this["webpackJsonpFELT-webapp"]=this["webpackJsonpFELT-webapp"]||[]).push([[28],{200:function(e){e.exports=JSON.parse('{"abi":[],"allSourcePaths":{"5":"/Users/filip/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol"},"ast":{"absolutePath":"/Users/filip/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol","exportedSymbols":{"VRFRequestIDBase":[1778]},"id":1779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1730,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFRequestIDBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1778,"linearizedBaseContracts":[1778],"name":"VRFRequestIDBase","nameLocation":"66:16:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1757,"nodeType":"Block","src":"974:89:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1749,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1016:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1750,"name":"_userSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1026:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1751,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"1037:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1752,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1049:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1747,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1005:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1005:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1005:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1746,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"995:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"995:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"987:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:5","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"987:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1743,"id":1756,"nodeType":"Return","src":"980:78:5"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"88:706:5","text":" @notice returns the seed which is actually input to the VRF coordinator\\n @dev To prevent repetition of VRF output due to repetition of the\\n @dev user-supplied seed, that seed is combined in a hash with the\\n @dev user-specific nonce, and the address of the consuming contract. The\\n @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\\n @dev the final seed, but the nonce does protect against repetition in\\n @dev requests which are included in a single block.\\n @param _userSeed VRF seed input provided by user\\n @param _requester Address of the requesting contract\\n @param _nonce User-specific nonce at the time of the request"},"id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"makeVRFInputSeed","nameLocation":"806:16:5","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"_keyHash","nameLocation":"836:8:5","nodeType":"VariableDeclaration","scope":1758,"src":"828:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"828:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"_userSeed","nameLocation":"858:9:5","nodeType":"VariableDeclaration","scope":1758,"src":"850:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"_requester","nameLocation":"881:10:5","nodeType":"VariableDeclaration","scope":1758,"src":"873:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"_nonce","nameLocation":"905:6:5","nodeType":"VariableDeclaration","scope":1758,"src":"897:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:93:5"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1758,"src":"958:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:21:5"},"scope":1778,"src":"797:266:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"1577:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1771,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1617:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1772,"name":"_vRFInputSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1627:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1769,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1600:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1600:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1600:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1768,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1590:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1767,"id":1775,"nodeType":"Return","src":"1583:59:5"}]},"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"1067:373:5","text":" @notice Returns the id for this request\\n @param _keyHash The serviceAgreement ID to be used for this request\\n @param _vRFInputSeed The seed to be passed directly to the VRF\\n @return The id for this request\\n @dev Note that _vRFInputSeed is not the seed passed by the consuming\\n @dev contract, but the one generated by makeVRFInputSeed"},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"makeRequestId","nameLocation":"1452:13:5","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"_keyHash","nameLocation":"1479:8:5","nodeType":"VariableDeclaration","scope":1777,"src":"1471:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"_vRFInputSeed","nameLocation":"1501:13:5","nodeType":"VariableDeclaration","scope":1777,"src":"1493:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1465:53:5"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"1561:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1561:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1553:21:5"},"scope":1778,"src":"1443:204:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1779,"src":"57:1592:5","usedErrors":[]}],"src":"32:1617:5"},"bytecode":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206f82264acde9d9d9b62d38a76870e11375dbfba425dda00f607a5dea4195583564736f6c634300080a0033","bytecodeSha1":"73df0a6f5d0123eb2b2db0faf62b602aa77c123a","compiler":{"evm_version":"istanbul","optimizer":{"enabled":true,"runs":200},"version":"0.8.10+commit.fc410830"},"contractName":"VRFRequestIDBase","coverageMap":{"branches":{"5":{}},"statements":{"5":{}}},"dependencies":[],"deployedBytecode":"6080604052600080fdfea26469706673582212206f82264acde9d9d9b62d38a76870e11375dbfba425dda00f607a5dea4195583564736f6c634300080a0033","deployedSourceMap":"57:1592:5:-:0;;;;;","language":"Solidity","natspec":{"kind":"dev","methods":{},"version":1},"offset":[57,1649],"opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x82264ACDE9D9D9B62D38A76870E11375 0xDB 0xFB LOG4 0x25 0xDD LOG0 0xF PUSH1 0x7A 0x5D 0xEA COINBASE SWAP6 PC CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","pcMap":{"0":{"offset":[57,1649],"op":"PUSH1","path":"5","value":"0x80"},"2":{"fn":null,"offset":[57,1649],"op":"PUSH1","path":"5","value":"0x40"},"4":{"fn":null,"offset":[57,1649],"op":"MSTORE","path":"5"},"5":{"fn":null,"offset":[57,1649],"op":"PUSH1","path":"5","value":"0x0"},"7":{"fn":null,"offset":[57,1649],"op":"DUP1","path":"5"},"8":{"fn":null,"offset":[57,1649],"op":"REVERT","path":"5"}},"sha1":"ba9da95e65c03b76e8c1e4fd834102a9789ee51a","source":"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VRFRequestIDBase {\\n\\n  /**\\n   * @notice returns the seed which is actually input to the VRF coordinator\\n   *\\n   * @dev To prevent repetition of VRF output due to repetition of the\\n   * @dev user-supplied seed, that seed is combined in a hash with the\\n   * @dev user-specific nonce, and the address of the consuming contract. The\\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\\n   * @dev the final seed, but the nonce does protect against repetition in\\n   * @dev requests which are included in a single block.\\n   *\\n   * @param _userSeed VRF seed input provided by user\\n   * @param _requester Address of the requesting contract\\n   * @param _nonce User-specific nonce at the time of the request\\n   */\\n  function makeVRFInputSeed(\\n    bytes32 _keyHash,\\n    uint256 _userSeed,\\n    address _requester,\\n    uint256 _nonce\\n  )\\n    internal\\n    pure\\n    returns (\\n      uint256\\n    )\\n  {\\n    return uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\\n  }\\n\\n  /**\\n   * @notice Returns the id for this request\\n   * @param _keyHash The serviceAgreement ID to be used for this request\\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\\n   * @return The id for this request\\n   *\\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\\n   * @dev contract, but the one generated by makeVRFInputSeed\\n   */\\n  function makeRequestId(\\n    bytes32 _keyHash,\\n    uint256 _vRFInputSeed\\n  )\\n    internal\\n    pure\\n    returns (\\n      bytes32\\n    )\\n  {\\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\\n  }\\n}","sourceMap":"57:1592:5:-:0;;;;;;;;;;;;;;;;;;;","sourcePath":"/Users/filip/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol","type":"contract"}')}}]);
//# sourceMappingURL=28.5d234173.chunk.js.map