{
  "abi": [
    {
      "inputs": [],
      "name": "abortPlan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "secret0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret2",
          "type": "bytes32"
        }
      ],
      "name": "acceptNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNodes",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "builders",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "changeNodeStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "declineNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "secret0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret2",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "modelCID",
          "type": "string"
        }
      ],
      "name": "finishPlan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNodeRequestsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNodesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roundIdx",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "getRoundModel",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPlanRunning",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyTurn",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nodeRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodeState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nodesArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "secret0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret2",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "entryKeyTurn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPlans",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "plans",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "finalNode",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "randomSeed",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "baseModelCID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "finalModelCID",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "secret0",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "secret2",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "numRounds",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "numNodes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nodeReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keyTurn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "name": "requestJoinNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "parity",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "name": "setBuilderPublickey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/project/TrainingPlans.sol",
    "8": "contracts/project/Builders.sol",
    "9": "contracts/project/DataProviders.sol"
  },
  "ast": {
    "absolutePath": "contracts/project/TrainingPlans.sol",
    "exportedSymbols": {
      "Builders": [
        337
      ],
      "DataProviders": [
        577
      ],
      "TrainingPlans": [
        1089
      ]
    },
    "id": 1090,
    "license": "GPL3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 579,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "contracts/project/Builders.sol",
        "file": "./Builders.sol",
        "id": 580,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 338,
        "src": "58:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/project/DataProviders.sol",
        "file": "./DataProviders.sol",
        "id": 581,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1090,
        "sourceUnit": 578,
        "src": "83:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 583,
              "name": "Builders",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 337,
              "src": "312:8:10"
            },
            "id": 584,
            "nodeType": "InheritanceSpecifier",
            "src": "312:8:10"
          },
          {
            "baseName": {
              "id": 585,
              "name": "DataProviders",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 577,
              "src": "322:13:10"
            },
            "id": 586,
            "nodeType": "InheritanceSpecifier",
            "src": "322:13:10"
          }
        ],
        "canonicalName": "TrainingPlans",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 582,
          "nodeType": "StructuredDocumentation",
          "src": "114:171:10",
          "text": " @dev A contract that manages the training plans for the project.\n There is always only 1 plan running at a time. All the plans are\n stored on the blockchain"
        },
        "fullyImplemented": true,
        "id": 1089,
        "linearizedBaseContracts": [
          1089,
          577,
          337
        ],
        "name": "TrainingPlans",
        "nameLocation": "295:13:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TrainingPlans.Round",
            "id": 595,
            "members": [
              {
                "constant": false,
                "id": 588,
                "mutability": "mutable",
                "name": "completed",
                "nameLocation": "397:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "392:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 587,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "numSubmitted",
                "nameLocation": "421:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "416:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "416:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 594,
                "mutability": "mutable",
                "name": "modelsCID",
                "nameLocation": "470:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "443:36:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                  "typeString": "mapping(address => string)"
                },
                "typeName": {
                  "id": 593,
                  "keyType": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "443:26:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                    "typeString": "mapping(address => string)"
                  },
                  "valueType": {
                    "id": 592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Round",
            "nameLocation": "376:5:10",
            "nodeType": "StructDefinition",
            "scope": 1089,
            "src": "369:117:10",
            "visibility": "public"
          },
          {
            "canonicalName": "TrainingPlans.TrainingPlan",
            "id": 629,
            "members": [
              {
                "constant": false,
                "id": 597,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "633:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "625:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 596,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "625:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 599,
                "mutability": "mutable",
                "name": "finalNode",
                "nameLocation": "658:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "650:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 598,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "650:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 601,
                "mutability": "mutable",
                "name": "randomSeed",
                "nameLocation": "684:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "677:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 600,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "677:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 603,
                "mutability": "mutable",
                "name": "baseModelCID",
                "nameLocation": "754:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "747:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 602,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "747:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 605,
                "mutability": "mutable",
                "name": "finalModelCID",
                "nameLocation": "828:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "821:20:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 604,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "821:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 607,
                "mutability": "mutable",
                "name": "parity",
                "nameLocation": "958:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "953:11:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 606,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "953:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 609,
                "mutability": "mutable",
                "name": "secret0",
                "nameLocation": "982:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "974:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 608,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "974:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 611,
                "mutability": "mutable",
                "name": "secret1",
                "nameLocation": "1007:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "999:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 610,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "999:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 613,
                "mutability": "mutable",
                "name": "secret2",
                "nameLocation": "1032:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1024:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 612,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1024:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 615,
                "mutability": "mutable",
                "name": "numRounds",
                "nameLocation": "1084:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1077:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 614,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1077:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 617,
                "mutability": "mutable",
                "name": "numNodes",
                "nameLocation": "1160:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1155:13:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 616,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1155:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 619,
                "mutability": "mutable",
                "name": "totalReward",
                "nameLocation": "1183:11:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1178:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 618,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1178:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 621,
                "mutability": "mutable",
                "name": "nodeReward",
                "nameLocation": "1209:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1204:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 620,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1204:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 623,
                "mutability": "mutable",
                "name": "keyTurn",
                "nameLocation": "1235:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1230:12:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 622,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1230:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 628,
                "mutability": "mutable",
                "name": "rounds",
                "nameLocation": "1323:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 629,
                "src": "1300:29:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$595_storage_$",
                  "typeString": "mapping(uint256 => struct TrainingPlans.Round)"
                },
                "typeName": {
                  "id": 627,
                  "keyType": {
                    "id": 624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1300:22:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$595_storage_$",
                    "typeString": "mapping(uint256 => struct TrainingPlans.Round)"
                  },
                  "valueType": {
                    "id": 626,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 625,
                      "name": "Round",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 595,
                      "src": "1316:5:10"
                    },
                    "referencedDeclaration": 595,
                    "src": "1316:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                      "typeString": "struct TrainingPlans.Round"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TrainingPlan",
            "nameLocation": "579:12:10",
            "nodeType": "StructDefinition",
            "scope": 1089,
            "src": "572:764:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1620616",
            "id": 634,
            "mutability": "mutable",
            "name": "plans",
            "nameLocation": "1379:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "1342:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
              "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan)"
            },
            "typeName": {
              "id": 633,
              "keyType": {
                "id": 630,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1350:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1342:29:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan)"
              },
              "valueType": {
                "id": 632,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 631,
                  "name": "TrainingPlan",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 629,
                  "src": "1358:12:10"
                },
                "referencedDeclaration": 629,
                "src": "1358:12:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                  "typeString": "struct TrainingPlans.TrainingPlan"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5967269",
            "id": 637,
            "mutability": "mutable",
            "name": "numPlans",
            "nameLocation": "1404:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "1390:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 635,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1390:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 636,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1415:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da0986aa",
            "id": 640,
            "mutability": "mutable",
            "name": "isPlanRunning",
            "nameLocation": "1435:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "1423:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 638,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1423:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1451:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a19c8bc",
            "id": 643,
            "mutability": "mutable",
            "name": "currentRound",
            "nameLocation": "1476:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "1462:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 641,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1462:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1491:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 646,
            "mutability": "mutable",
            "name": "_seed",
            "nameLocation": "1562:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 1089,
            "src": "1546:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 644,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1546:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "37",
              "id": 645,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1570:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "1669:61:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 657,
                            "name": "_rounds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "1691:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1686:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 655,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1686:4:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1686:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 659,
                        "name": "_reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "1702:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1686:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 661,
                      "name": "activeNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "1712:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1686:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "1679:44:10"
                }
              ]
            },
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateTotalReward",
            "nameLocation": "1588:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_rounds",
                  "nameLocation": "1617:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1610:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "1631:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1626:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:30:10"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1663:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1662:6:10"
            },
            "scope": 1089,
            "src": "1579:151:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "1863:608:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 673,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "1894:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 674,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "1909:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                                "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                              }
                            },
                            "id": 678,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 675,
                                "name": "numPlans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "1915:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1926:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1915:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1909:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                              "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numRounds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 615,
                          "src": "1909:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "1894:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f726520726f756e647320746f20706572666f726d2e",
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1952:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7705b19389e8430887aade8f83a1d43017c2ec10645849f68c81ee656fb37250",
                          "typeString": "literal_string \"No more rounds to perform.\""
                        },
                        "value": "No more rounds to perform."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7705b19389e8430887aade8f83a1d43017c2ec10645849f68c81ee656fb37250",
                          "typeString": "literal_string \"No more rounds to perform.\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1873:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:117:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:117:10"
                },
                {
                  "assignments": [
                    686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "round",
                      "nameLocation": "2015:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "2001:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                        "typeString": "struct TrainingPlans.Round"
                      },
                      "typeName": {
                        "id": 685,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 684,
                          "name": "Round",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 595,
                          "src": "2001:5:10"
                        },
                        "referencedDeclaration": 595,
                        "src": "2001:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                          "typeString": "struct TrainingPlans.Round"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 687,
                          "name": "plans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "2023:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                            "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                          }
                        },
                        "id": 691,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 688,
                            "name": "numPlans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "2029:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2040:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2029:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2023:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                          "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rounds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 628,
                      "src": "2023:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$595_storage_$",
                        "typeString": "mapping(uint256 => struct TrainingPlans.Round storage ref)"
                      }
                    },
                    "id": 694,
                    "indexExpression": {
                      "id": 693,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "2050:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2023:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Round_$595_storage",
                      "typeString": "struct TrainingPlans.Round storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2001:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 699,
                                    "name": "round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "2100:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                                      "typeString": "struct TrainingPlans.Round storage pointer"
                                    }
                                  },
                                  "id": 700,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "modelsCID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 594,
                                  "src": "2100:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                    "typeString": "mapping(address => string storage ref)"
                                  }
                                },
                                "id": 703,
                                "indexExpression": {
                                  "expression": {
                                    "id": 701,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2116:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 702,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2116:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2100:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2094:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 697,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2094:5:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:34:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2094:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2139:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2094:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f64656c20616c72656164792073656e7420666f72207468697320726f756e64",
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2154:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cde9b4eb63e5f6e3c95de3ed4657f127879c45e728c76ffc022d8701fb814bd7",
                          "typeString": "literal_string \"Model already sent for this round\""
                        },
                        "value": "Model already sent for this round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cde9b4eb63e5f6e3c95de3ed4657f127879c45e728c76ffc022d8701fb814bd7",
                          "typeString": "literal_string \"Model already sent for this round\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2073:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:126:10"
                },
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 711,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "2267:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                            "typeString": "struct TrainingPlans.Round storage pointer"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "modelsCID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 594,
                        "src": "2267:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 716,
                      "indexExpression": {
                        "expression": {
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2283:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2283:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2267:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 717,
                      "name": "modelCID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "2297:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2267:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:38:10"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 720,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "2315:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                          "typeString": "struct TrainingPlans.Round storage pointer"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numSubmitted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "2315:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2337:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2315:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:23:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 726,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "2352:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                          "typeString": "struct TrainingPlans.Round storage pointer"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numSubmitted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "2352:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 728,
                      "name": "activeNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "2374:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2352:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 741,
                  "nodeType": "IfStatement",
                  "src": "2348:117:10",
                  "trueBody": {
                    "id": 740,
                    "nodeType": "Block",
                    "src": "2387:78:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 730,
                              "name": "round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "2401:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Round_$595_storage_ptr",
                                "typeString": "struct TrainingPlans.Round storage pointer"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "completed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 588,
                            "src": "2401:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2419:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2401:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 735,
                        "nodeType": "ExpressionStatement",
                        "src": "2401:22:10"
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 736,
                            "name": "currentRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "2437:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2453:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2437:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "2437:17:10"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 670,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 669,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 394,
                  "src": "1854:8:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1854:8:10"
              }
            ],
            "name": "_saveModel",
            "nameLocation": "1810:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "modelCID",
                  "nameLocation": "1835:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "1821:22:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1820:24:10"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:10"
            },
            "scope": 1089,
            "src": "1801:670:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "2571:143:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 753,
                          "name": "numPlans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 637,
                          "src": "2589:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2600:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2589:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20747261696e696e6720706c616e732063726561746564",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2603:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e45cf48045cc15af8071efe1a962542c0a688acd25fc5bdca67823101084e7e1",
                          "typeString": "literal_string \"No training plans created\""
                        },
                        "value": "No training plans created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e45cf48045cc15af8071efe1a962542c0a688acd25fc5bdca67823101084e7e1",
                          "typeString": "literal_string \"No training plans created\""
                        }
                      ],
                      "id": 752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2581:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:50:10"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 759,
                              "name": "plans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "2648:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                                "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                              }
                            },
                            "id": 763,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 760,
                                "name": "numPlans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "2654:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2665:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2654:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2648:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                              "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rounds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 628,
                          "src": "2648:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$595_storage_$",
                            "typeString": "mapping(uint256 => struct TrainingPlans.Round storage ref)"
                          }
                        },
                        "id": 766,
                        "indexExpression": {
                          "id": 765,
                          "name": "roundIdx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "2675:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2648:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Round_$595_storage",
                          "typeString": "struct TrainingPlans.Round storage ref"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "modelsCID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 594,
                      "src": "2648:46:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                        "typeString": "mapping(address => string storage ref)"
                      }
                    },
                    "id": 769,
                    "indexExpression": {
                      "id": 768,
                      "name": "nodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "2695:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2648:59:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 751,
                  "id": 770,
                  "nodeType": "Return",
                  "src": "2641:66:10"
                }
              ]
            },
            "functionSelector": "31888d88",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundModel",
            "nameLocation": "2486:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "roundIdx",
                  "nameLocation": "2505:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2500:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2523:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2515:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:36:10"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2556:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2555:15:10"
            },
            "scope": 1089,
            "src": "2477:237:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "2811:890:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2829:14:10",
                        "subExpression": {
                          "id": 784,
                          "name": "isPlanRunning",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 640,
                          "src": "2830:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e6f7468657220706c616e20697320616c7265616479206265696e67206578656375746564",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2845:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a8cef133b64ce144d79953721c86db9494c6b46ccf3e532c5ff3d68291b0326",
                          "typeString": "literal_string \"Another plan is already being executed\""
                        },
                        "value": "Another plan is already being executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a8cef133b64ce144d79953721c86db9494c6b46ccf3e532c5ff3d68291b0326",
                          "typeString": "literal_string \"Another plan is already being executed\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2821:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2821:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 790,
                          "name": "activeNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "2904:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2918:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2904:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20616374697665206e6f64657320746f20657865637574652074686520706c616e",
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2921:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9141a87d5f7bde9fd77a40b9f035beb9e0a6c19b59591920be869fe727d9b4f2",
                          "typeString": "literal_string \"No active nodes to execute the plan\""
                        },
                        "value": "No active nodes to execute the plan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9141a87d5f7bde9fd77a40b9f035beb9e0a6c19b59591920be869fe727d9b4f2",
                          "typeString": "literal_string \"No active nodes to execute the plan\""
                        }
                      ],
                      "id": 789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2896:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:63:10"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "plan",
                      "nameLocation": "2991:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "2970:25:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                        "typeString": "struct TrainingPlans.TrainingPlan"
                      },
                      "typeName": {
                        "id": 797,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 796,
                          "name": "TrainingPlan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 629,
                          "src": "2970:12:10"
                        },
                        "referencedDeclaration": 629,
                        "src": "2970:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 803,
                  "initialValue": {
                    "baseExpression": {
                      "id": 799,
                      "name": "plans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "2998:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                        "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                      }
                    },
                    "id": 802,
                    "indexExpression": {
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3004:10:10",
                      "subExpression": {
                        "id": 800,
                        "name": "numPlans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "3004:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2998:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                      "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2970:45:10"
                },
                {
                  "expression": {
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 804,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3025:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 597,
                      "src": "3025:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 807,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3040:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3040:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3025:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:25:10"
                },
                {
                  "expression": {
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 811,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3060:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseModelCID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 603,
                      "src": "3060:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 814,
                      "name": "modelCID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "3080:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3060:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:28:10"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 817,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3098:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numRounds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 615,
                      "src": "3098:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 820,
                      "name": "rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "3115:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3098:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "3098:23:10"
                },
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 823,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3131:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numNodes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 617,
                      "src": "3131:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 826,
                      "name": "activeNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "3147:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3131:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:27:10"
                },
                {
                  "expression": {
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 829,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3168:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 831,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nodeReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 621,
                      "src": "3168:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 832,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "3186:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3168:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "3168:24:10"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 835,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3202:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 619,
                      "src": "3202:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 839,
                          "name": "rounds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "3243:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 840,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "3251:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 838,
                        "name": "_calculateTotalReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "3221:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint32,uint256) view returns (uint256)"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3221:37:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3202:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:56:10"
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 844,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3268:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "keyTurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 623,
                      "src": "3268:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 847,
                      "name": "keyTurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "3283:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3268:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:22:10"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "randNum",
                      "nameLocation": "3309:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "3301:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3301:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 854,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 852,
                      "name": "_getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "3319:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:36:10"
                },
                {
                  "assignments": [
                    856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "3424:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "3416:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3416:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 861,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 857,
                      "name": "randNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "3428:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 858,
                        "name": "nodesArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "3438:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                          "typeString": "struct DataProviders.Node storage ref[] storage ref"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3438:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3428:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3416:39:10"
                },
                {
                  "body": {
                    "id": 873,
                    "nodeType": "Block",
                    "src": "3523:2:10",
                    "statements": []
                  },
                  "condition": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3472:44:10",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 862,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "3473:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 867,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 863,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "3484:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "expression": {
                              "id": 864,
                              "name": "nodesArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "3488:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                                "typeString": "struct DataProviders.Node storage ref[] storage ref"
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3488:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3484:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3473:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$355_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 344,
                      "src": "3473:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 874,
                  "loopExpression": {
                    "expression": {
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3518:3:10",
                      "subExpression": {
                        "id": 870,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "3520:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 872,
                    "nodeType": "ExpressionStatement",
                    "src": "3518:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3465:60:10"
                },
                {
                  "expression": {
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 875,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3535:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "finalNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 599,
                      "src": "3535:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 878,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "3552:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 883,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 879,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "3563:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "expression": {
                              "id": 880,
                              "name": "nodesArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "3567:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                                "typeString": "struct DataProviders.Node storage ref[] storage ref"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3567:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3563:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3552:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$355_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "3552:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3535:59:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:59:10"
                },
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 887,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3604:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "randomSeed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 601,
                      "src": "3604:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 892,
                          "name": "randNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "3629:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3622:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3622:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3622:15:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3604:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:33:10"
                },
                {
                  "expression": {
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 896,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "3648:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3663:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3648:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:16:10"
                },
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 900,
                      "name": "isPlanRunning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "3674:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3690:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3674:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:20:10"
                }
              ]
            },
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 781,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 780,
                  "name": "onlyBuilder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 299,
                  "src": "2799:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2799:11:10"
              }
            ],
            "name": "_addPlan",
            "nameLocation": "2729:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "modelCID",
                  "nameLocation": "2752:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "2738:22:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "rounds",
                  "nameLocation": "2769:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "2762:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "2782:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "2777:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:52:10"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2811:0:10"
            },
            "scope": 1089,
            "src": "2720:981:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 929,
              "nodeType": "Block",
              "src": "3753:183:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 909,
                            "name": "numPlans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "3784:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3795:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3784:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 912,
                                "name": "plans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 634,
                                "src": "3800:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                                  "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                                }
                              },
                              "id": 916,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 913,
                                  "name": "numPlans",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 637,
                                  "src": "3806:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3817:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3806:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3800:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                                "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                              }
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "creator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 597,
                            "src": "3800:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 918,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3831:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3831:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3800:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3784:57:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063726561746f722063616e2061626f72742074686520706c616e",
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3855:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e0281d15b0930a1e3e78abebdd41f288e16d953dd9cbc7d8f5f3eaad54314e1",
                          "typeString": "literal_string \"Only creator can abort the plan\""
                        },
                        "value": "Only creator can abort the plan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e0281d15b0930a1e3e78abebdd41f288e16d953dd9cbc7d8f5f3eaad54314e1",
                          "typeString": "literal_string \"Only creator can abort the plan\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3763:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:135:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:135:10"
                },
                {
                  "expression": {
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 925,
                      "name": "isPlanRunning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "3908:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3924:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3908:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "3908:21:10"
                }
              ]
            },
            "functionSelector": "b777a893",
            "id": 930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abortPlan",
            "nameLocation": "3734:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3743:2:10"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3753:0:10"
            },
            "scope": 1089,
            "src": "3725:211:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1005,
              "nodeType": "Block",
              "src": "4255:433:10",
              "statements": [
                {
                  "assignments": [
                    947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 947,
                      "mutability": "mutable",
                      "name": "plan",
                      "nameLocation": "4286:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1005,
                      "src": "4265:25:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                        "typeString": "struct TrainingPlans.TrainingPlan"
                      },
                      "typeName": {
                        "id": 946,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 945,
                          "name": "TrainingPlan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 629,
                          "src": "4265:12:10"
                        },
                        "referencedDeclaration": 629,
                        "src": "4265:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "baseExpression": {
                      "id": 948,
                      "name": "plans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "4293:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TrainingPlan_$629_storage_$",
                        "typeString": "mapping(uint256 => struct TrainingPlans.TrainingPlan storage ref)"
                      }
                    },
                    "id": 952,
                    "indexExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 949,
                        "name": "numPlans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "4299:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4299:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4293:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrainingPlan_$629_storage",
                      "typeString": "struct TrainingPlans.TrainingPlan storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4265:47:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 955,
                            "name": "plan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "4330:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                              "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "finalNode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 599,
                          "src": "4330:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 957,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4348:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4348:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4330:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207072652d73656c6563746564206e6f64652063616e2066696e69736820706c616e",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4360:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f69330d79f81b43192d654cc667930c3e322d0beda7214e6ac1a446eff67d2",
                          "typeString": "literal_string \"Only pre-selected node can finish plan\""
                        },
                        "value": "Only pre-selected node can finish plan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f69330d79f81b43192d654cc667930c3e322d0beda7214e6ac1a446eff67d2",
                          "typeString": "literal_string \"Only pre-selected node can finish plan\""
                        }
                      ],
                      "id": 954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4322:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:79:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:79:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 964,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "4419:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 965,
                            "name": "plan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "4435:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                              "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numRounds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 615,
                          "src": "4435:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4419:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20726f756e6473206d75737420626520636f6d706c65746564",
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4451:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bebbe19030b65736d9410c25e0d1ef4ce7b9faf4d2e0887e66bd08fae65e6280",
                          "typeString": "literal_string \"All rounds must be completed\""
                        },
                        "value": "All rounds must be completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bebbe19030b65736d9410c25e0d1ef4ce7b9faf4d2e0887e66bd08fae65e6280",
                          "typeString": "literal_string \"All rounds must be completed\""
                        }
                      ],
                      "id": 963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4411:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:71:10"
                },
                {
                  "expression": {
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 971,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "4493:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "finalModelCID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 605,
                      "src": "4493:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 974,
                      "name": "modelCID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "4514:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4493:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "4493:29:10"
                },
                {
                  "expression": {
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 977,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "4533:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 979,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "parity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 607,
                      "src": "4533:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 980,
                      "name": "parity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 932,
                      "src": "4547:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4533:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:20:10"
                },
                {
                  "expression": {
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 983,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "4563:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 985,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "secret0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "4563:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 986,
                      "name": "secret0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "4578:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4563:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "4563:22:10"
                },
                {
                  "expression": {
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 989,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "4595:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "secret1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "4595:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 992,
                      "name": "secret1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "4610:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4595:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:22:10"
                },
                {
                  "expression": {
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 995,
                        "name": "plan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "4627:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrainingPlan_$629_storage_ptr",
                          "typeString": "struct TrainingPlans.TrainingPlan storage pointer"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "secret2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 613,
                      "src": "4627:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 998,
                      "name": "secret2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "4642:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4627:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:22:10"
                },
                {
                  "expression": {
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1001,
                      "name": "isPlanRunning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "4660:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4676:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4660:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:21:10"
                }
              ]
            },
            "functionSelector": "f1b7a129",
            "id": 1006,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 943,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 942,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 394,
                  "src": "4246:8:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4246:8:10"
              }
            ],
            "name": "finishPlan",
            "nameLocation": "4094:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "parity",
                  "nameLocation": "4119:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4114:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "secret0",
                  "nameLocation": "4143:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4135:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4135:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "secret1",
                  "nameLocation": "4168:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4160:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "secret2",
                  "nameLocation": "4193:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4185:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "modelCID",
                  "nameLocation": "4224:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4210:22:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4210:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:134:10"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4255:0:10"
            },
            "scope": 1089,
            "src": "4085:603:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "4802:309:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4820:14:10",
                        "subExpression": {
                          "id": 1015,
                          "name": "isPlanRunning",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 640,
                          "src": "4821:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f64652063616e2774206368616e676520737461747573207768696c6520706c616e2072756e6e696e672e",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4836:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff455a22125fbb58ee2f44d4ae7f2fae0a892cf1b6fb4bd9b9369431dbb4f53b",
                          "typeString": "literal_string \"Node can't change status while plan running.\""
                        },
                        "value": "Node can't change status while plan running."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff455a22125fbb58ee2f44d4ae7f2fae0a892cf1b6fb4bd9b9369431dbb4f53b",
                          "typeString": "literal_string \"Node can't change status while plan running.\""
                        }
                      ],
                      "id": 1014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4812:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:71:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1020,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "4897:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 1027,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1021,
                              "name": "nodeState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "4908:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1024,
                            "indexExpression": {
                              "expression": {
                                "id": 1022,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4918:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4918:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4908:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4932:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4908:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4897:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$355_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 344,
                      "src": "4897:47:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1029,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "4948:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4897:57:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1044,
                  "nodeType": "IfStatement",
                  "src": "4893:146:10",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "4956:83:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1031,
                            "name": "activeNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "4970:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "components": [
                                {
                                  "id": 1032,
                                  "name": "status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "4985:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1033,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4984:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1037,
                                "name": "activeNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 373,
                                "src": "5013:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5027:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5013:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "4984:44:10",
                            "trueExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1034,
                                "name": "activeNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 373,
                                "src": "4995:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5009:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4995:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4970:58:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "4970:58:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1045,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "5048:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$355_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 1052,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1046,
                              "name": "nodeState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5059:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1049,
                            "indexExpression": {
                              "expression": {
                                "id": 1047,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5069:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5069:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5059:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5083:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "5059:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5048:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$355_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 344,
                      "src": "5048:47:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1054,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "5098:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5048:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "5048:56:10"
                }
              ]
            },
            "documentation": {
              "id": 1007,
              "nodeType": "StructuredDocumentation",
              "src": "4695:47:10",
              "text": "Function node can become active/inactive "
            },
            "functionSelector": "a0572b2a",
            "id": 1058,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1012,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1011,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 394,
                  "src": "4793:8:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4793:8:10"
              }
            ],
            "name": "changeNodeStatus",
            "nameLocation": "4756:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "4778:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "4773:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4772:13:10"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4802:0:10"
            },
            "scope": 1089,
            "src": "4747:364:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "5203:153:10",
              "statements": [
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1063,
                      "name": "_seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "5213:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1069,
                                  "name": "_seed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 646,
                                  "src": "5256:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1074,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1071,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "5273:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1072,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "5273:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1073,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5288:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "5273:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1070,
                                    "name": "blockhash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -5,
                                    "src": "5263:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 1075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5263:27:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1076,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5292:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "coinbase",
                                  "nodeType": "MemberAccess",
                                  "src": "5292:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1078,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5308:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "difficulty",
                                  "nodeType": "MemberAccess",
                                  "src": "5308:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1067,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5239:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5239:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5239:86:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1066,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5229:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5229:97:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5221:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5221:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5221:106:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5213:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:114:10"
                },
                {
                  "expression": {
                    "id": 1085,
                    "name": "_seed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 646,
                    "src": "5344:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1062,
                  "id": 1086,
                  "nodeType": "Return",
                  "src": "5337:12:10"
                }
              ]
            },
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRandomNumber",
            "nameLocation": "5158:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5174:2:10"
            },
            "returnParameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "5194:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5193:9:10"
            },
            "scope": 1089,
            "src": "5149:207:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1090,
        "src": "286:5072:10",
        "usedErrors": []
      }
    ],
    "src": "33:5326:10"
  },
  "bytecode": "6080604052600380546001600160401b0319169055600680546001600160481b03191690556007805534801561003457600080fd5b5061154c806100446000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638518a047116100ad578063b777a89311610071578063b777a893146102d6578063ba7925cb146102de578063c4e10a14146102f6578063da0986aa1461034e578063f1b7a1291461037357600080fd5b80638518a0471461024d5780638a19c8bc1461026d578063a0572b2a14610286578063b162061614610299578063b5967269146102c657600080fd5b806338b15a03116100f457806338b15a03146101f75780634a653a4d1461020c5780635ae12c731461021f5780636f2690a51461023257806372ab489f1461024557600080fd5b806307f196511461013157806313029e031461015b578063144ddefc1461016d5780631821aa62146101cf57806331888d88146101d7575b600080fd5b6003546101419063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6004545b604051908152602001610152565b6101aa61017b3660046110dc565b600060208190529081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b039094168452911515602084015290820152606001610152565b60025461015f565b6101ea6101e53660046110fe565b610386565b6040516101529190611177565b61020a61020536600461119a565b6104c9565b005b61020a61021a3660046111c4565b6105e1565b61020a61022d36600461119a565b610880565b6101aa6102403660046111fd565b610909565b61020a61094c565b61015f61025b3660046110dc565b60016020526000908152604090205481565b6006546101419065010000000000900463ffffffff1681565b61020a610294366004611216565b610a54565b6102ac6102a73660046111fd565b610bf5565b6040516101529e9d9c9b9a99989796959493929190611231565b6006546101419063ffffffff1681565b61020a610d91565b60035461014190640100000000900463ffffffff1681565b6103096103043660046111fd565b610e3e565b604080516001600160a01b0390981688529515156020880152931515948601949094526060850191909152608084015260a083019190915260c082015260e001610152565b60065461036390640100000000900460ff1681565b6040519015158152602001610152565b61020a6103813660046112f7565b610e9b565b60065460609063ffffffff166103e35760405162461bcd60e51b815260206004820152601960248201527f4e6f20747261696e696e6720706c616e7320637265617465640000000000000060448201526064015b60405180910390fd5b6006546005906000906103fe9060019063ffffffff166113ec565b63ffffffff16815260208082019290925260409081016000908120868252600d0183528181206001600160a01b03861682526002019092529020805461044390611411565b80601f016020809104026020016040519081016040528092919081815260200182805461046f90611411565b80156104bc5780601f10610491576101008083540402835291602001916104bc565b820191906000526020600020905b81548152906001019060200180831161049f57829003601f168201915b5050505050905092915050565b33600090815260016020526040902054156105265760405162461bcd60e51b815260206004820152601d60248201527f4164647265737320616c7265616479206d61646520726571756573742e00000060448201526064016103da565b3360008181526001602081815260408084208390558051606081018252948552951515908401908152948301938452600480549182018155909152905160029091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8101805494511515600160a01b026001600160a81b03199095166001600160a01b039390931692909217939093179055517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b33600090815260016020526040902054600311156106115760405162461bcd60e51b81526004016103da9061144c565b6004546106595760405162461bcd60e51b81526020600482015260166024820152752737903932b8bab2b9ba103a3790383937b1b2b9b99760511b60448201526064016103da565b600254610667906003611493565b6004805460019160009161067c9084906114ab565b8154811061068c5761068c6114c2565b600091825260208083206002909202909101546001600160a01b0316835282019290925260400190205560038054600191906004906106db90849063ffffffff640100000000909104166114d8565b92506101000a81548163ffffffff021916908363ffffffff16021790555060026040518060e001604052806004600160048054905061071a91906114ab565b8154811061072a5761072a6114c2565b60009182526020808320600292830201546001600160a01b03908116855260018583018190528b151560408088019190915260608088018d905260808089018d905260a0808a018d90526003805463ffffffff640100000000909104811660c09c8d01528d548088018f559d8b52888b208d516005909f02018054998e0151968e01511515600160a81b0260ff60a81b19971515600160a01b026001600160a81b0319909b169f9099169e909e179890981794909416959095178b55908901518a84015588015194890194909455908601518784015594909301516004959095019490945583549293929091610822918591166114d8565b92506101000a81548163ffffffff021916908363ffffffff160217905550600480548061085157610851611500565b60008281526020812060026000199093019283020180546001600160a81b031916815560010155905550505050565b336000818152602081905260409020546001600160a01b0316146108d85760405162461bcd60e51b815260206004820152600f60248201526e109d5a5b19195c881b9bdd081cd95d608a1b60448201526064016103da565b3360009081526020819052604090208054921515600160a01b0260ff60a01b19909316929092178255600190910155565b6004818154811061091957600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b336000908152600160205260409020546003111561097c5760405162461bcd60e51b81526004016103da9061144c565b6004546109c45760405162461bcd60e51b81526020600482015260166024820152752737903932b8bab2b9ba103a3790383937b1b2b9b99760511b60448201526064016103da565b600260016000600460016004805490506109de91906114ab565b815481106109ee576109ee6114c2565b600091825260208083206002909202909101546001600160a01b031683528201929092526040019020556004805480610a2957610a29611500565b60008281526020812060026000199093019283020180546001600160a81b0319168155600101559055565b3360009081526001602052604090205460031115610a845760405162461bcd60e51b81526004016103da9061144c565b600654640100000000900460ff1615610af45760405162461bcd60e51b815260206004820152602c60248201527f4e6f64652063616e2774206368616e676520737461747573207768696c65207060448201526b3630b710393ab73734b7339760a11b60648201526084016103da565b3360009081526001602052604090205481151590600290610b17906003906114ab565b81548110610b2757610b276114c2565b6000918252602090912060059091020154600160a01b900460ff16151514610b975780610b6857600354610b639060019063ffffffff166113ec565b610b7c565b600354610b7c9063ffffffff1660016114d8565b6003805463ffffffff191663ffffffff929092169190911790555b336000908152600160205260409020548190600290610bb8906003906114ab565b81548110610bc857610bc86114c2565b600091825260209091206005909102018054911515600160a01b0260ff60a01b1990921691909117905550565b6005602052600090815260409020805460018201546002830180546001600160a01b039384169493831693600160a01b90930463ffffffff16929190610c3a90611411565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6690611411565b8015610cb35780601f10610c8857610100808354040283529160200191610cb3565b820191906000526020600020905b815481529060010190602001808311610c9657829003601f168201915b505050505090806003018054610cc890611411565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf490611411565b8015610d415780601f10610d1657610100808354040283529160200191610d41565b820191906000526020600020905b815481529060010190602001808311610d2457829003601f168201915b505050600484015460058501546006860154600787015460088801546009890154600a8a0154600b8b0154600c909b0154999a60ff90971699959850939650919463ffffffff909116939192918e565b60065463ffffffff1615801590610de257506006543390600590600090610dc09060019063ffffffff166113ec565b63ffffffff1681526020810191909152604001600020546001600160a01b0316145b610e2e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e2061626f72742074686520706c616e0060448201526064016103da565b6006805464ff0000000019169055565b60028181548110610e4e57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b038416955060ff600160a01b8504811695600160a81b90950416939087565b3360009081526001602052604090205460031115610ecb5760405162461bcd60e51b81526004016103da9061144c565b6006546000906005908290610ee89060019063ffffffff166113ec565b63ffffffff168152602081019190915260400160002060018101549091506001600160a01b03163314610f6c5760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79207072652d73656c6563746564206e6f64652063616e2066696e69736044820152653410383630b760d11b60648201526084016103da565b600881015460065463ffffffff918216650100000000009091049091161015610fd75760405162461bcd60e51b815260206004820152601c60248201527f416c6c20726f756e6473206d75737420626520636f6d706c657465640000000060448201526064016103da565b8151610fec9060038301906020850190611027565b5060048101805460ff191696151596909617909555506005840192909255600680840191909155600790920155805464ff0000000019169055565b82805461103390611411565b90600052602060002090601f016020900481019282611055576000855561109b565b82601f1061106e57805160ff191683800117855561109b565b8280016001018555821561109b579182015b8281111561109b578251825591602001919060010190611080565b506110a79291506110ab565b5090565b5b808211156110a757600081556001016110ac565b80356001600160a01b03811681146110d757600080fd5b919050565b6000602082840312156110ee57600080fd5b6110f7826110c0565b9392505050565b6000806040838503121561111157600080fd5b82359150611121602084016110c0565b90509250929050565b6000815180845260005b8181101561115057602081850181015186830182015201611134565b81811115611162576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110f7602083018461112a565b803580151581146110d757600080fd5b600080604083850312156111ad57600080fd5b6111b68361118a565b946020939093013593505050565b600080600080608085870312156111da57600080fd5b6111e38561118a565b966020860135965060408601359560600135945092505050565b60006020828403121561120f57600080fd5b5035919050565b60006020828403121561122857600080fd5b6110f78261118a565b6001600160a01b038f811682528e16602082015263ffffffff8d1660408201526101c0606082015260006112696101c083018e61112a565b828103608084015261127b818e61112a565b91505061128c60a083018c15159052565b8960c08301528860e0830152876101008301526112b261012083018863ffffffff169052565b856101408301528461016083015283610180830152826101a08301529f9e505050505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561130f57600080fd5b6113188661118a565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8082111561134a57600080fd5b818801915088601f83011261135e57600080fd5b813581811115611370576113706112e1565b604051601f8201601f19908116603f01168101908382118183101715611398576113986112e1565b816040528281528b60208487010111156113b157600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff83811690831681811015611409576114096113d6565b039392505050565b600181811c9082168061142557607f821691505b6020821081141561144657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526027908201527f4f6e6c79206e6f6465732061726520616c6c6f77656420746f2065786563757460408201526632903a3434b99760c91b606082015260800190565b600082198211156114a6576114a66113d6565b500190565b6000828210156114bd576114bd6113d6565b500390565b634e487b7160e01b600052603260045260246000fd5b600063ffffffff8083168185168083038211156114f7576114f76113d6565b01949350505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c3efdf530fcccde8cbac579bda45397a5ac6c2971d153ea46a76d8047b59881964736f6c634300080a0033",
  "bytecodeSha1": "ee54cee63f488d3aef07a6252faf0cb9b53b5282",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "TrainingPlans",
  "coverageMap": {
    "branches": {
      "10": {
        "TrainingPlans.abortPlan": {
          "34": [
            3784,
            3796,
            false
          ],
          "35": [
            3800,
            3841,
            true
          ]
        },
        "TrainingPlans.changeNodeStatus": {
          "32": [
            4820,
            4834,
            true
          ],
          "33": [
            4897,
            4954,
            false
          ]
        },
        "TrainingPlans.finishPlan": {
          "36": [
            4330,
            4358,
            true
          ],
          "37": [
            4419,
            4449,
            true
          ]
        }
      },
      "8": {
        "Builders.setBuilderPublickey": {
          "38": [
            780,
            823,
            true
          ]
        }
      },
      "9": {
        "DataProviders.requestJoinNode": {
          "39": [
            2035,
            2061,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "TrainingPlans.abortPlan": {
          "22": [
            3763,
            3898
          ],
          "23": [
            3908,
            3929
          ]
        },
        "TrainingPlans.changeNodeStatus": {
          "19": [
            4812,
            4883
          ],
          "20": [
            4970,
            5028
          ],
          "21": [
            5048,
            5104
          ]
        },
        "TrainingPlans.finishPlan": {
          "24": [
            4322,
            4401
          ],
          "25": [
            4411,
            4482
          ],
          "26": [
            4493,
            4522
          ],
          "27": [
            4533,
            4553
          ],
          "28": [
            4563,
            4585
          ],
          "29": [
            4595,
            4617
          ],
          "30": [
            4627,
            4649
          ],
          "31": [
            4660,
            4681
          ]
        },
        "TrainingPlans.getRoundModel": {
          "2": [
            2581,
            2631
          ],
          "3": [
            2641,
            2707
          ]
        }
      },
      "8": {
        "Builders.setBuilderPublickey": {
          "13": [
            772,
            843
          ],
          "14": [
            853,
            889
          ],
          "15": [
            899,
            941
          ]
        }
      },
      "9": {
        "DataProviders.acceptNode": {
          "7": [
            2892,
            2950
          ],
          "8": [
            2960,
            3041
          ],
          "9": [
            3052,
            3064
          ],
          "10": [
            3074,
            3359
          ],
          "11": [
            3369,
            3385
          ],
          "12": [
            3395,
            3413
          ]
        },
        "DataProviders.declineNode": {
          "16": [
            3543,
            3601
          ],
          "17": [
            3611,
            3672
          ],
          "18": [
            3682,
            3700
          ]
        },
        "DataProviders.getNodeRequestsLength": {
          "0": [
            1710,
            1736
          ]
        },
        "DataProviders.getNodesLength": {
          "1": [
            1604,
            1628
          ]
        },
        "DataProviders.requestJoinNode": {
          "4": [
            2027,
            2095
          ],
          "5": [
            2105,
            2130
          ],
          "6": [
            2140,
            2282
          ]
        }
      }
    }
  },
  "dependencies": [
    "Builders",
    "DataProviders"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80638518a047116100ad578063b777a89311610071578063b777a893146102d6578063ba7925cb146102de578063c4e10a14146102f6578063da0986aa1461034e578063f1b7a1291461037357600080fd5b80638518a0471461024d5780638a19c8bc1461026d578063a0572b2a14610286578063b162061614610299578063b5967269146102c657600080fd5b806338b15a03116100f457806338b15a03146101f75780634a653a4d1461020c5780635ae12c731461021f5780636f2690a51461023257806372ab489f1461024557600080fd5b806307f196511461013157806313029e031461015b578063144ddefc1461016d5780631821aa62146101cf57806331888d88146101d7575b600080fd5b6003546101419063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b6004545b604051908152602001610152565b6101aa61017b3660046110dc565b600060208190529081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b039094168452911515602084015290820152606001610152565b60025461015f565b6101ea6101e53660046110fe565b610386565b6040516101529190611177565b61020a61020536600461119a565b6104c9565b005b61020a61021a3660046111c4565b6105e1565b61020a61022d36600461119a565b610880565b6101aa6102403660046111fd565b610909565b61020a61094c565b61015f61025b3660046110dc565b60016020526000908152604090205481565b6006546101419065010000000000900463ffffffff1681565b61020a610294366004611216565b610a54565b6102ac6102a73660046111fd565b610bf5565b6040516101529e9d9c9b9a99989796959493929190611231565b6006546101419063ffffffff1681565b61020a610d91565b60035461014190640100000000900463ffffffff1681565b6103096103043660046111fd565b610e3e565b604080516001600160a01b0390981688529515156020880152931515948601949094526060850191909152608084015260a083019190915260c082015260e001610152565b60065461036390640100000000900460ff1681565b6040519015158152602001610152565b61020a6103813660046112f7565b610e9b565b60065460609063ffffffff166103e35760405162461bcd60e51b815260206004820152601960248201527f4e6f20747261696e696e6720706c616e7320637265617465640000000000000060448201526064015b60405180910390fd5b6006546005906000906103fe9060019063ffffffff166113ec565b63ffffffff16815260208082019290925260409081016000908120868252600d0183528181206001600160a01b03861682526002019092529020805461044390611411565b80601f016020809104026020016040519081016040528092919081815260200182805461046f90611411565b80156104bc5780601f10610491576101008083540402835291602001916104bc565b820191906000526020600020905b81548152906001019060200180831161049f57829003601f168201915b5050505050905092915050565b33600090815260016020526040902054156105265760405162461bcd60e51b815260206004820152601d60248201527f4164647265737320616c7265616479206d61646520726571756573742e00000060448201526064016103da565b3360008181526001602081815260408084208390558051606081018252948552951515908401908152948301938452600480549182018155909152905160029091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8101805494511515600160a01b026001600160a81b03199095166001600160a01b039390931692909217939093179055517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b33600090815260016020526040902054600311156106115760405162461bcd60e51b81526004016103da9061144c565b6004546106595760405162461bcd60e51b81526020600482015260166024820152752737903932b8bab2b9ba103a3790383937b1b2b9b99760511b60448201526064016103da565b600254610667906003611493565b6004805460019160009161067c9084906114ab565b8154811061068c5761068c6114c2565b600091825260208083206002909202909101546001600160a01b0316835282019290925260400190205560038054600191906004906106db90849063ffffffff640100000000909104166114d8565b92506101000a81548163ffffffff021916908363ffffffff16021790555060026040518060e001604052806004600160048054905061071a91906114ab565b8154811061072a5761072a6114c2565b60009182526020808320600292830201546001600160a01b03908116855260018583018190528b151560408088019190915260608088018d905260808089018d905260a0808a018d90526003805463ffffffff640100000000909104811660c09c8d01528d548088018f559d8b52888b208d516005909f02018054998e0151968e01511515600160a81b0260ff60a81b19971515600160a01b026001600160a81b0319909b169f9099169e909e179890981794909416959095178b55908901518a84015588015194890194909455908601518784015594909301516004959095019490945583549293929091610822918591166114d8565b92506101000a81548163ffffffff021916908363ffffffff160217905550600480548061085157610851611500565b60008281526020812060026000199093019283020180546001600160a81b031916815560010155905550505050565b336000818152602081905260409020546001600160a01b0316146108d85760405162461bcd60e51b815260206004820152600f60248201526e109d5a5b19195c881b9bdd081cd95d608a1b60448201526064016103da565b3360009081526020819052604090208054921515600160a01b0260ff60a01b19909316929092178255600190910155565b6004818154811061091957600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b336000908152600160205260409020546003111561097c5760405162461bcd60e51b81526004016103da9061144c565b6004546109c45760405162461bcd60e51b81526020600482015260166024820152752737903932b8bab2b9ba103a3790383937b1b2b9b99760511b60448201526064016103da565b600260016000600460016004805490506109de91906114ab565b815481106109ee576109ee6114c2565b600091825260208083206002909202909101546001600160a01b031683528201929092526040019020556004805480610a2957610a29611500565b60008281526020812060026000199093019283020180546001600160a81b0319168155600101559055565b3360009081526001602052604090205460031115610a845760405162461bcd60e51b81526004016103da9061144c565b600654640100000000900460ff1615610af45760405162461bcd60e51b815260206004820152602c60248201527f4e6f64652063616e2774206368616e676520737461747573207768696c65207060448201526b3630b710393ab73734b7339760a11b60648201526084016103da565b3360009081526001602052604090205481151590600290610b17906003906114ab565b81548110610b2757610b276114c2565b6000918252602090912060059091020154600160a01b900460ff16151514610b975780610b6857600354610b639060019063ffffffff166113ec565b610b7c565b600354610b7c9063ffffffff1660016114d8565b6003805463ffffffff191663ffffffff929092169190911790555b336000908152600160205260409020548190600290610bb8906003906114ab565b81548110610bc857610bc86114c2565b600091825260209091206005909102018054911515600160a01b0260ff60a01b1990921691909117905550565b6005602052600090815260409020805460018201546002830180546001600160a01b039384169493831693600160a01b90930463ffffffff16929190610c3a90611411565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6690611411565b8015610cb35780601f10610c8857610100808354040283529160200191610cb3565b820191906000526020600020905b815481529060010190602001808311610c9657829003601f168201915b505050505090806003018054610cc890611411565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf490611411565b8015610d415780601f10610d1657610100808354040283529160200191610d41565b820191906000526020600020905b815481529060010190602001808311610d2457829003601f168201915b505050600484015460058501546006860154600787015460088801546009890154600a8a0154600b8b0154600c909b0154999a60ff90971699959850939650919463ffffffff909116939192918e565b60065463ffffffff1615801590610de257506006543390600590600090610dc09060019063ffffffff166113ec565b63ffffffff1681526020810191909152604001600020546001600160a01b0316145b610e2e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792063726561746f722063616e2061626f72742074686520706c616e0060448201526064016103da565b6006805464ff0000000019169055565b60028181548110610e4e57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b038416955060ff600160a01b8504811695600160a81b90950416939087565b3360009081526001602052604090205460031115610ecb5760405162461bcd60e51b81526004016103da9061144c565b6006546000906005908290610ee89060019063ffffffff166113ec565b63ffffffff168152602081019190915260400160002060018101549091506001600160a01b03163314610f6c5760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79207072652d73656c6563746564206e6f64652063616e2066696e69736044820152653410383630b760d11b60648201526084016103da565b600881015460065463ffffffff918216650100000000009091049091161015610fd75760405162461bcd60e51b815260206004820152601c60248201527f416c6c20726f756e6473206d75737420626520636f6d706c657465640000000060448201526064016103da565b8151610fec9060038301906020850190611027565b5060048101805460ff191696151596909617909555506005840192909255600680840191909155600790920155805464ff0000000019169055565b82805461103390611411565b90600052602060002090601f016020900481019282611055576000855561109b565b82601f1061106e57805160ff191683800117855561109b565b8280016001018555821561109b579182015b8281111561109b578251825591602001919060010190611080565b506110a79291506110ab565b5090565b5b808211156110a757600081556001016110ac565b80356001600160a01b03811681146110d757600080fd5b919050565b6000602082840312156110ee57600080fd5b6110f7826110c0565b9392505050565b6000806040838503121561111157600080fd5b82359150611121602084016110c0565b90509250929050565b6000815180845260005b8181101561115057602081850181015186830182015201611134565b81811115611162576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110f7602083018461112a565b803580151581146110d757600080fd5b600080604083850312156111ad57600080fd5b6111b68361118a565b946020939093013593505050565b600080600080608085870312156111da57600080fd5b6111e38561118a565b966020860135965060408601359560600135945092505050565b60006020828403121561120f57600080fd5b5035919050565b60006020828403121561122857600080fd5b6110f78261118a565b6001600160a01b038f811682528e16602082015263ffffffff8d1660408201526101c0606082015260006112696101c083018e61112a565b828103608084015261127b818e61112a565b91505061128c60a083018c15159052565b8960c08301528860e0830152876101008301526112b261012083018863ffffffff169052565b856101408301528461016083015283610180830152826101a08301529f9e505050505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561130f57600080fd5b6113188661118a565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8082111561134a57600080fd5b818801915088601f83011261135e57600080fd5b813581811115611370576113706112e1565b604051601f8201601f19908116603f01168101908382118183101715611398576113986112e1565b816040528281528b60208487010111156113b157600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff83811690831681811015611409576114096113d6565b039392505050565b600181811c9082168061142557607f821691505b6020821081141561144657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526027908201527f4f6e6c79206e6f6465732061726520616c6c6f77656420746f2065786563757460408201526632903a3434b99760c91b606082015260800190565b600082198211156114a6576114a66113d6565b500190565b6000828210156114bd576114bd6113d6565b500390565b634e487b7160e01b600052603260045260246000fd5b600063ffffffff8083168185168083038211156114f7576114f76113d6565b01949350505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c3efdf530fcccde8cbac579bda45397a5ac6c2971d153ea46a76d8047b59881964736f6c634300080a0033",
  "deployedSourceMap": "286:5072:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:29:9;;;;;;;;;;;;287:10:11;275:23;;;257:42;;245:2;230:18;942:29:9;;;;;;;;1641:102;1717:12;:19;1641:102;;;456:25:11;;;444:2;429:18;1641:102:9;310:177:11;271:43:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:43:8;;;-1:-1:-1;;;271:43:8;;;;;;;;;;;-1:-1:-1;;;;;1280:32:11;;;1262:51;;1356:14;;1349:22;1344:2;1329:18;;1322:50;1388:18;;;1381:34;1250:2;1235:18;271:43:8;1066:355:11;1542:93:9;1611:10;:17;1542:93;;2477:237:10;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1953:336:9:-;;;;;;:::i;:::-;;:::i;:::-;;2782:638;;;;;;:::i;:::-;;:::i;694:254:8:-;;;;;;:::i;:::-;;:::i;1096:37:9:-;;;;;;:::i;:::-;;:::i;3494:213::-;;;:::i;865:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1462:30:10;;;;;;;;;;;;4747:364;;;;;;:::i;:::-;;:::i;1342:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;1390:26::-;;;;;;;;;3725:211;;;:::i;977:25:9:-;;;;;;;;;;;;912:24;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5205:32:11;;;5187:51;;5281:14;;5274:22;5269:2;5254:18;;5247:50;5340:14;;5333:22;5313:18;;;5306:50;;;;5387:2;5372:18;;5365:34;;;;5430:3;5415:19;;5408:35;5225:3;5459:19;;5452:35;;;;5518:3;5503:19;;5496:35;5174:3;5159:19;912:24:9;4884:653:11;1423:33:10;;;;;;;;;;;;;;;5707:14:11;;5700:22;5682:41;;5670:2;5655:18;1423:33:10;5542:187:11;4085:603:10;;;;;;:::i;:::-;;:::i;2477:237::-;2589:8;;2556:13;;2589:8;;2581:50;;;;-1:-1:-1;;;2581:50:10;;7269:2:11;2581:50:10;;;7251:21:11;7308:2;7288:18;;;7281:30;7347:27;7327:18;;;7320:55;7392:18;;2581:50:10;;;;;;;;;2654:8;;2648:5;;:19;;2654:12;;2665:1;;2654:8;;:12;:::i;:::-;2648:19;;;;;;;;;;;;;;;;-1:-1:-1;2648:19:10;;;:36;;;:26;;:36;;;;;-1:-1:-1;;;;;2648:59:10;;;;:46;;:59;;;;;2641:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:237;;;;:::o;1953:336:9:-;2045:10;2035:21;;;;:9;:21;;;;;;:26;2027:68;;;;-1:-1:-1;;;2027:68:9;;8366:2:11;2027:68:9;;;8348:21:11;8405:2;8385:18;;;8378:30;8444:31;8424:18;;;8417:59;8493:18;;2027:68:9;8164:353:11;2027:68:9;2115:10;2105:21;;;;2129:1;2105:21;;;;;;;;:25;;;2158:123;;;;;;;;;;;;;;;;;;;;;;;;;2140:12;:142;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2140:142:9;-1:-1:-1;;;;;;2140:142:9;;;-1:-1:-1;;;;;2140:142:9;;;;;;;;;;;;;;;;;;;;1953:336::o;2782:638::-;1200:10;1190:21;;;;:9;:21;;;;;;1215:1;-1:-1:-1;1190:26:9;1169:112;;;;-1:-1:-1;;;1169:112:9;;;;;;;:::i;:::-;2900:12:::1;:19:::0;2892:58:::1;;;::::0;-1:-1:-1;;;2892:58:9;;9132:2:11;2892:58:9::1;::::0;::::1;9114:21:11::0;9171:2;9151:18;;;9144:30;-1:-1:-1;;;9190:18:11;;;9183:52;9252:18;;2892:58:9::1;8930:346:11::0;2892:58:9::1;3020:10;:17:::0;:21:::1;::::0;3040:1:::1;3020:21;:::i;:::-;2970:12;2983:19:::0;;2960:9:::1;::::0;:57:::1;::::0;2983:23:::1;::::0;2960:9;;2983:23:::1;:::i;:::-;2970:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;:46:::0;-1:-1:-1;;;;;2970:46:9::1;2960:57:::0;;;::::1;::::0;;;;;;;;:81;3052:7:::1;:12:::0;;2970:46;;3052:7;::::1;::::0;:12:::1;::::0;2970:46;;3052:12:::1;::::0;;;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3074:10;3090:268;;;;;;;;3119:12;3154:1;3132:12;:19;;;;:23;;;;:::i;:::-;3119:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:46:::0;-1:-1:-1;;;;;3119:46:9;;::::1;3090:268:::0;;3119:46;3090:268;;::::1;::::0;;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3340:7:::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;3090:268:::0;;;;;3074:285;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;;-1:-1:-1::0;;;3074:285:9::1;-1:-1:-1::0;;;;3074:285:9;::::1;;-1:-1:-1::0;;;3074:285:9::1;-1:-1:-1::0;;;;;;3074:285:9;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;3340:7:::1;3074:285:::0;;;::::1;::::0;;;;3369:16;;3119:46;;3340:7;3119:37;;3369:16:::1;::::0;3119:46;;3369:16:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3395:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;3395:18:9;;;;;::::1;;::::0;;-1:-1:-1;;;;;;3395:18:9;;;::::1;;::::0;;;-1:-1:-1;;;;2782:638:9:o;694:254:8:-;813:10;780:8;:20;;;;;;;;;;:29;-1:-1:-1;;;;;780:29:8;:43;772:71;;;;-1:-1:-1;;;772:71:8;;10243:2:11;772:71:8;;;10225:21:11;10282:2;10262:18;;;10255:30;-1:-1:-1;;;10301:18:11;;;10294:45;10356:18;;772:71:8;10041:339:11;772:71:8;862:10;853:8;:20;;;;;;;;;;:36;;;;;-1:-1:-1;;;853:36:8;-1:-1:-1;;;;853:36:8;;;;;;;;;-1:-1:-1;899:30:8;;;:42;694:254::o;1096:37:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1096:37:9;;;-1:-1:-1;;;;1096:37:9;;;;;;;:::o;3494:213::-;1200:10;1190:21;;;;:9;:21;;;;;;1215:1;-1:-1:-1;1190:26:9;1169:112;;;;-1:-1:-1;;;1169:112:9;;;;;;;:::i;:::-;3551:12:::1;:19:::0;3543:58:::1;;;::::0;-1:-1:-1;;;3543:58:9;;9132:2:11;3543:58:9::1;::::0;::::1;9114:21:11::0;9171:2;9151:18;;;9144:30;-1:-1:-1;;;9190:18:11;;;9183:52;9252:18;;3543:58:9::1;8930:346:11::0;3543:58:9::1;3671:1;3611:9;:57;3621:12;3656:1;3634:12;:19;;;;:23;;;;:::i;:::-;3621:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;:46:::0;-1:-1:-1;;;;;3621:46:9::1;3611:57:::0;;;::::1;::::0;;;;;;;;:61;3682:12:::1;:18:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;3682:18:9;;;;;::::1;;::::0;;-1:-1:-1;;;;;;3682:18:9;;;::::1;;::::0;;;3494:213::o;4747:364:10:-;1200:10:9;1190:21;;;;:9;:21;;;;;;1215:1;-1:-1:-1;1190:26:9;1169:112;;;;-1:-1:-1;;;1169:112:9;;;;;;;:::i;:::-;4821:13:10::1;::::0;;;::::1;;;4820:14;4812:71;;;::::0;-1:-1:-1;;;4812:71:10;;10587:2:11;4812:71:10::1;::::0;::::1;10569:21:11::0;10626:2;10606:18;;;10599:30;10665:34;10645:18;;;10638:62;-1:-1:-1;;;10716:18:11;;;10709:42;10768:19;;4812:71:10::1;10385:408:11::0;4812:71:10::1;4918:10;4908:21;::::0;;;:9:::1;:21;::::0;;;;;4897:57;::::1;;::::0;:10:::1;::::0;4908:25:::1;::::0;4932:1:::1;::::0;4908:25:::1;:::i;:::-;4897:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:47:::0;-1:-1:-1;;;4897:47:10;::::1;;;:57;;;4893:146;;4985:6;4984:44;;5013:11;::::0;:15:::1;::::0;5027:1:::1;::::0;5013:11:::1;;:15;:::i;:::-;4984:44;;;4995:11;::::0;:15:::1;::::0;:11:::1;;::::0;:15:::1;:::i;:::-;4970:11;:58:::0;;-1:-1:-1;;4970:58:10::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4893:146:::1;5069:10;5059:21;::::0;;;:9:::1;:21;::::0;;;;;5098:6;;5048:10:::1;::::0;5059:25:::1;::::0;5083:1:::1;::::0;5059:25:::1;:::i;:::-;5048:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:56:::0;;;::::1;;-1:-1:-1::0;;;5048:56:10::1;-1:-1:-1::0;;;;5048:56:10;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;4747:364:10:o;1342:42::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1342:42:10;;;;;;;;-1:-1:-1;;;1342:42:10;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1342:42:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1342:42:10;;-1:-1:-1;1342:42:10;;;;;;;;;;;:::o;3725:211::-;3784:8;;;;:12;;;;:57;;-1:-1:-1;3806:8:10;;3831:10;;3800:5;;:19;;3806:12;;3817:1;;3806:8;;:12;:::i;:::-;3800:19;;;;;;;;;;;;;-1:-1:-1;3800:19:10;:27;-1:-1:-1;;;;;3800:27:10;:41;3784:57;3763:135;;;;-1:-1:-1;;;3763:135:10;;11000:2:11;3763:135:10;;;10982:21:11;11039:2;11019:18;;;11012:30;11078:33;11058:18;;;11051:61;11129:18;;3763:135:10;10798:355:11;3763:135:10;3908:13;:21;;-1:-1:-1;;3908:21:10;;;3725:211::o;912:24:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;912:24:9;;;-1:-1:-1;912:24:9;-1:-1:-1;;;912:24:9;;;;;-1:-1:-1;;;912:24:9;;;;;;;:::o;4085:603:10:-;1200:10:9;1190:21;;;;:9;:21;;;;;;1215:1;-1:-1:-1;1190:26:9;1169:112;;;;-1:-1:-1;;;1169:112:9;;;;;;;:::i;:::-;4299:8:10::1;::::0;4265:25:::1;::::0;4293:5:::1;::::0;4265:25;;4299:12:::1;::::0;4310:1:::1;::::0;4299:8:::1;;:12;:::i;:::-;4293:19;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4293:19:10;4330:14:::1;::::0;::::1;::::0;4293:19;;-1:-1:-1;;;;;;4330:14:10::1;4348:10;4330:28;4322:79;;;::::0;-1:-1:-1;;;4322:79:10;;11360:2:11;4322:79:10::1;::::0;::::1;11342:21:11::0;11399:2;11379:18;;;11372:30;11438:34;11418:18;;;11411:62;-1:-1:-1;;;11489:18:11;;;11482:36;11535:19;;4322:79:10::1;11158:402:11::0;4322:79:10::1;4435:14;::::0;::::1;::::0;4419:12:::1;::::0;4435:14:::1;::::0;;::::1;4419:12:::0;;;::::1;::::0;;::::1;:30;;4411:71;;;::::0;-1:-1:-1;;;4411:71:10;;11767:2:11;4411:71:10::1;::::0;::::1;11749:21:11::0;11806:2;11786:18;;;11779:30;11845;11825:18;;;11818:58;11893:18;;4411:71:10::1;11565:352:11::0;4411:71:10::1;4493:29:::0;;::::1;::::0;:18:::1;::::0;::::1;::::0;:29:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4533:11:10::1;::::0;::::1;:20:::0;;-1:-1:-1;;4533:20:10::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;4563:12:10::1;::::0;::::1;:22:::0;;;;4595:12:::1;::::0;;::::1;:22:::0;;;;4627:12:::1;::::0;;::::1;:22:::0;4660:21;;-1:-1:-1;;4660:21:10::1;::::0;;4085:603::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;492:173:11;560:20;;-1:-1:-1;;;;;609:31:11;;599:42;;589:70;;655:1;652;645:12;589:70;492:173;;;:::o;670:186::-;729:6;782:2;770:9;761:7;757:23;753:32;750:52;;;798:1;795;788:12;750:52;821:29;840:9;821:29;:::i;:::-;811:39;670:186;-1:-1:-1;;;670:186:11:o;1426:254::-;1494:6;1502;1555:2;1543:9;1534:7;1530:23;1526:32;1523:52;;;1571:1;1568;1561:12;1523:52;1607:9;1594:23;1584:33;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1626:48;;1426:254;;;;;:::o;1685:472::-;1727:3;1765:5;1759:12;1792:6;1787:3;1780:19;1817:1;1827:162;1841:6;1838:1;1835:13;1827:162;;;1903:4;1959:13;;;1955:22;;1949:29;1931:11;;;1927:20;;1920:59;1856:12;1827:162;;;2007:6;2004:1;2001:13;1998:87;;;2073:1;2066:4;2057:6;2052:3;2048:16;2044:27;2037:38;1998:87;-1:-1:-1;2139:2:11;2118:15;-1:-1:-1;;2114:29:11;2105:39;;;;2146:4;2101:50;;1685:472;-1:-1:-1;;1685:472:11:o;2162:220::-;2311:2;2300:9;2293:21;2274:4;2331:45;2372:2;2361:9;2357:18;2349:6;2331:45;:::i;2387:160::-;2452:20;;2508:13;;2501:21;2491:32;;2481:60;;2537:1;2534;2527:12;2552:248;2617:6;2625;2678:2;2666:9;2657:7;2653:23;2649:32;2646:52;;;2694:1;2691;2684:12;2646:52;2717:26;2733:9;2717:26;:::i;:::-;2707:36;2790:2;2775:18;;;;2762:32;;-1:-1:-1;;;2552:248:11:o;2805:385::-;2888:6;2896;2904;2912;2965:3;2953:9;2944:7;2940:23;2936:33;2933:53;;;2982:1;2979;2972:12;2933:53;3005:26;3021:9;3005:26;:::i;:::-;2995:36;3078:2;3063:18;;3050:32;;-1:-1:-1;3129:2:11;3114:18;;3101:32;;3180:2;3165:18;3152:32;;-1:-1:-1;2805:385:11;-1:-1:-1;;;2805:385:11:o;3195:180::-;3254:6;3307:2;3295:9;3286:7;3282:23;3278:32;3275:52;;;3323:1;3320;3313:12;3275:52;-1:-1:-1;3346:23:11;;3195:180;-1:-1:-1;3195:180:11:o;3380:::-;3436:6;3489:2;3477:9;3468:7;3464:23;3460:32;3457:52;;;3505:1;3502;3495:12;3457:52;3528:26;3544:9;3528:26;:::i;3565:1314::-;-1:-1:-1;;;;;4092:32:11;;;4074:51;;927:31;;4176:2;4161:18;;915:44;90:10;79:22;;4230:2;4215:18;;67:35;4270:3;4265:2;4254:9;4250:18;4243:31;4055:4;4297:46;4338:3;4327:9;4323:19;4315:6;4297:46;:::i;:::-;4392:9;4384:6;4380:22;4374:3;4363:9;4359:19;4352:51;4420:33;4446:6;4438;4420:33;:::i;:::-;4412:41;;;4462:44;4501:3;4490:9;4486:19;4478:6;1040:13;1033:21;1021:34;;970:91;4462:44;4543:6;4537:3;4526:9;4522:19;4515:35;4587:6;4581:3;4570:9;4566:19;4559:35;4631:6;4625:3;4614:9;4610:19;4603:35;4647:46;4688:3;4677:9;4673:19;4665:6;90:10;79:22;67:35;;14:94;4647:46;4730:7;4724:3;4713:9;4709:19;4702:36;4775:7;4769:3;4758:9;4754:19;4747:36;4820:7;4814:3;4803:9;4799:19;4792:36;4865:7;4859:3;4848:9;4844:19;4837:36;3565:1314;;;;;;;;;;;;;;;;;:::o;5734:127::-;5795:10;5790:3;5786:20;5783:1;5776:31;5826:4;5823:1;5816:15;5850:4;5847:1;5840:15;5866:1196;5968:6;5976;5984;5992;6000;6053:3;6041:9;6032:7;6028:23;6024:33;6021:53;;;6070:1;6067;6060:12;6021:53;6093:26;6109:9;6093:26;:::i;:::-;6083:36;;6166:2;6155:9;6151:18;6138:32;6128:42;;6217:2;6206:9;6202:18;6189:32;6179:42;;6268:2;6257:9;6253:18;6240:32;6230:42;;6323:3;6312:9;6308:19;6295:33;6347:18;6388:2;6380:6;6377:14;6374:34;;;6404:1;6401;6394:12;6374:34;6442:6;6431:9;6427:22;6417:32;;6487:7;6480:4;6476:2;6472:13;6468:27;6458:55;;6509:1;6506;6499:12;6458:55;6545:2;6532:16;6567:2;6563;6560:10;6557:36;;;6573:18;;:::i;:::-;6648:2;6642:9;6616:2;6702:13;;-1:-1:-1;;6698:22:11;;;6722:2;6694:31;6690:40;6678:53;;;6746:18;;;6766:22;;;6743:46;6740:72;;;6792:18;;:::i;:::-;6832:10;6828:2;6821:22;6867:2;6859:6;6852:18;6907:7;6902:2;6897;6893;6889:11;6885:20;6882:33;6879:53;;;6928:1;6925;6918:12;6879:53;6984:2;6979;6975;6971:11;6966:2;6958:6;6954:15;6941:46;7029:1;7024:2;7019;7011:6;7007:15;7003:24;6996:35;7050:6;7040:16;;;;;;;5866:1196;;;;;;;;:::o;7421:127::-;7482:10;7477:3;7473:20;7470:1;7463:31;7513:4;7510:1;7503:15;7537:4;7534:1;7527:15;7553:221;7592:4;7621:10;7681;;;;7651;;7703:12;;;7700:38;;;7718:18;;:::i;:::-;7755:13;;7553:221;-1:-1:-1;;;7553:221:11:o;7779:380::-;7858:1;7854:12;;;;7901;;;7922:61;;7976:4;7968:6;7964:17;7954:27;;7922:61;8029:2;8021:6;8018:14;7998:18;7995:38;7992:161;;;8075:10;8070:3;8066:20;8063:1;8056:31;8110:4;8107:1;8100:15;8138:4;8135:1;8128:15;7992:161;;7779:380;;;:::o;8522:403::-;8724:2;8706:21;;;8763:2;8743:18;;;8736:30;8802:34;8797:2;8782:18;;8775:62;-1:-1:-1;;;8868:2:11;8853:18;;8846:37;8915:3;8900:19;;8522:403::o;9281:128::-;9321:3;9352:1;9348:6;9345:1;9342:13;9339:39;;;9358:18;;:::i;:::-;-1:-1:-1;9394:9:11;;9281:128::o;9414:125::-;9454:4;9482:1;9479;9476:8;9473:34;;;9487:18;;:::i;:::-;-1:-1:-1;9524:9:11;;9414:125::o;9544:127::-;9605:10;9600:3;9596:20;9593:1;9586:31;9636:4;9633:1;9626:15;9660:4;9657:1;9650:15;9676:228;9715:3;9743:10;9780:2;9777:1;9773:10;9810:2;9807:1;9803:10;9841:3;9837:2;9833:12;9828:3;9825:21;9822:47;;;9849:18;;:::i;:::-;9885:13;;9676:228;-1:-1:-1;;;;9676:228:11:o;9909:127::-;9970:10;9965:3;9961:20;9958:1;9951:31;10001:4;9998:1;9991:15;10025:4;10022:1;10015:15",
  "language": "Solidity",
  "natspec": {
    "details": "A contract that manages the training plans for the project. There is always only 1 plan running at a time. All the plans are stored on the blockchain",
    "kind": "dev",
    "methods": {
      "acceptNode(bool,bytes32,bytes32,bytes32)": {
        "notice": "Accepting first request in the stack",
        "params": {
          "parity": "header type",
          "secret0": "sharing encrypted common secret for nodes",
          "secret1": "sharing encrypted common secret for nodes",
          "secret2": "sharing encrypted common secret for nodes TODO: Secret should be updated as hash of previous secret So that the node doesn't have access to previous models TODO: Should not accept node when plan is running"
        }
      },
      "changeNodeStatus(bool)": {
        "notice": "Function node can become active/inactive "
      },
      "declineNode()": {
        "notice": "Declining first request in the stack"
      },
      "requestJoinNode(bool,bytes32)": {
        "notice": "Node can request to join providing their public key.",
        "params": {
          "parity": "based on header value (0x02/0x03 - false/true)",
          "publicKey": "compressed public key value"
        }
      },
      "setBuilderPublickey(bool,bytes32)": {
        "notice": "Builder can update his public key.",
        "params": {
          "parity": "based on header value (0x02/0x03 - false/true)",
          "publicKey": "compressed public key value"
        }
      }
    },
    "version": 1
  },
  "offset": [
    286,
    5358
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8518A047 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB777A893 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB777A893 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xBA7925CB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xC4E10A14 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xDA0986AA EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xF1B7A129 EQ PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8518A047 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA0572B2A EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xB1620616 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xB5967269 EQ PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38B15A03 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x38B15A03 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4A653A4D EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x5AE12C73 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6F2690A5 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x72AB489F EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F19651 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x13029E03 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x144DDEFC EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x1821AA62 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x31888D88 EQ PUSH2 0x1D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x141 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20A PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x94C JUMP JUMPDEST PUSH2 0x15F PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x141 SWAP1 PUSH6 0x10000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x141 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x20A PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x141 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE SWAP6 ISZERO ISZERO PUSH1 0x20 DUP9 ADD MSTORE SWAP4 ISZERO ISZERO SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x363 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20747261696E696E6720706C616E73206372656174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3FE SWAP1 PUSH1 0x1 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x13EC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0xD ADD DUP4 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x2 ADD SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x443 SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46F SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x491 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C7265616479206D61646520726571756573742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP5 DUP6 MSTORE SWAP6 ISZERO ISZERO SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE SWAP5 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP2 MUL PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B DUP2 ADD DUP1 SLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 GT ISZERO PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x667 SWAP1 PUSH1 0x3 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x67C SWAP1 DUP5 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x6DB SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND PUSH2 0x14D8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x72A JUMPI PUSH2 0x72A PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP3 DUP4 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP12 ISZERO ISZERO PUSH1 0x40 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP9 ADD DUP14 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP10 ADD DUP14 SWAP1 MSTORE PUSH1 0xA0 DUP1 DUP11 ADD DUP14 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0xC0 SWAP13 DUP14 ADD MSTORE DUP14 SLOAD DUP1 DUP9 ADD DUP16 SSTORE SWAP14 DUP12 MSTORE DUP9 DUP12 KECCAK256 DUP14 MLOAD PUSH1 0x5 SWAP1 SWAP16 MUL ADD DUP1 SLOAD SWAP10 DUP15 ADD MLOAD SWAP7 DUP15 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP8 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP12 AND SWAP16 SWAP1 SWAP10 AND SWAP15 SWAP1 SWAP15 OR SWAP9 SWAP1 SWAP9 OR SWAP5 SWAP1 SWAP5 AND SWAP6 SWAP1 SWAP6 OR DUP12 SSTORE SWAP1 DUP10 ADD MLOAD DUP11 DUP5 ADD SSTORE DUP9 ADD MLOAD SWAP5 DUP10 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP1 DUP7 ADD MLOAD DUP8 DUP5 ADD SSTORE SWAP5 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP4 SLOAD SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0x822 SWAP2 DUP6 SWAP2 AND PUSH2 0x14D8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x851 JUMPI PUSH2 0x851 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x109D5A5B19195C881B9BDD081CD95D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 GT ISZERO PUSH2 0x97C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9EE PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0xA29 JUMPI PUSH2 0xA29 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 GT ISZERO PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F64652063616E2774206368616E676520737461747573207768696C652070 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3630B710393AB73734B73397 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 ISZERO ISZERO SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xB17 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB27 JUMPI PUSH2 0xB27 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB97 JUMPI DUP1 PUSH2 0xB68 JUMPI PUSH1 0x3 SLOAD PUSH2 0xB63 SWAP1 PUSH1 0x1 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xB7C SWAP1 PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xBB8 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0xC3A SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC66 SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCB3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC88 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC96 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xCC8 SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCF4 SWAP1 PUSH2 0x1411 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 DUP10 ADD SLOAD PUSH1 0xA DUP11 ADD SLOAD PUSH1 0xB DUP12 ADD SLOAD PUSH1 0xC SWAP1 SWAP12 ADD SLOAD SWAP10 SWAP11 PUSH1 0xFF SWAP1 SWAP8 AND SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP4 SWAP2 SWAP3 SWAP2 DUP15 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH4 0xFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xDE2 JUMPI POP PUSH1 0x6 SLOAD CALLER SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDC0 SWAP1 PUSH1 0x1 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x13EC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063726561746F722063616E2061626F72742074686520706C616E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP6 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP6 DIV DUP2 AND SWAP6 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP6 DIV AND SWAP4 SWAP1 DUP8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 GT ISZERO PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DA SWAP1 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x5 SWAP1 DUP3 SWAP1 PUSH2 0xEE8 SWAP1 PUSH1 0x1 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x13EC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207072652D73656C6563746564206E6F64652063616E2066696E6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3410383630B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0x6 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH6 0x10000000000 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20726F756E6473206D75737420626520636F6D706C6574656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST DUP2 MLOAD PUSH2 0xFEC SWAP1 PUSH1 0x3 DUP4 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1027 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE POP PUSH1 0x5 DUP5 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SSTORE DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1033 SWAP1 PUSH2 0x1411 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1055 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x109B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x106E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x109B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x109B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x109B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1080 JUMP JUMPDEST POP PUSH2 0x10A7 SWAP3 SWAP2 POP PUSH2 0x10AB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10AC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F7 DUP3 PUSH2 0x10C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1121 PUSH1 0x20 DUP5 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1150 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1134 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1162 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112A JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B6 DUP4 PUSH2 0x118A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E3 DUP6 PUSH2 0x118A JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F7 DUP3 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 DUP2 AND DUP3 MSTORE DUP15 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP14 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1269 PUSH2 0x1C0 DUP4 ADD DUP15 PUSH2 0x112A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x127B DUP2 DUP15 PUSH2 0x112A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x128C PUSH1 0xA0 DUP4 ADD DUP13 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP10 PUSH1 0xC0 DUP4 ADD MSTORE DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x12B2 PUSH2 0x120 DUP4 ADD DUP9 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP6 PUSH2 0x140 DUP4 ADD MSTORE DUP5 PUSH2 0x160 DUP4 ADD MSTORE DUP4 PUSH2 0x180 DUP4 ADD MSTORE DUP3 PUSH2 0x1A0 DUP4 ADD MSTORE SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP7 PUSH2 0x118A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x134A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x1370 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1398 PUSH2 0x12E1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP12 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1409 JUMPI PUSH2 0x1409 PUSH2 0x13D6 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1425 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1446 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206E6F6465732061726520616C6C6F77656420746F20657865637574 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x32903A3434B997 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14A6 JUMPI PUSH2 0x14A6 PUSH2 0x13D6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14BD JUMPI PUSH2 0x14BD PUSH2 0x13D6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F7 PUSH2 0x13D6 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xEF 0xDF MSTORE8 0xF 0xCC 0xCD 0xE8 0xCB 0xAC JUMPI SWAP12 0xDA GASLIMIT CODECOPY PUSH27 0x5AC6C2971D153EA46A76D8047B59881964736F6C634300080A0033 ",
  "pcMap": {
    "0": {
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8518A047"
    },
    "38": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB777A893"
    },
    "49": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB777A893"
    },
    "60": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D6"
    },
    "64": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBA7925CB"
    },
    "71": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DE"
    },
    "75": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC4E10A14"
    },
    "82": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F6"
    },
    "86": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDA0986AA"
    },
    "93": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34E"
    },
    "97": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF1B7A129"
    },
    "104": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x373"
    },
    "108": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "REVERT",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8518A047"
    },
    "120": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24D"
    },
    "124": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8A19C8BC"
    },
    "131": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D"
    },
    "135": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA0572B2A"
    },
    "142": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x286"
    },
    "146": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB1620616"
    },
    "153": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x299"
    },
    "157": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB5967269"
    },
    "164": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "165": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C6"
    },
    "168": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "172": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "REVERT",
      "path": "10"
    },
    "173": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x38B15A03"
    },
    "180": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "GT",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x38B15A03"
    },
    "191": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F7"
    },
    "195": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4A653A4D"
    },
    "202": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20C"
    },
    "206": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5AE12C73"
    },
    "213": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21F"
    },
    "217": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6F2690A5"
    },
    "224": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x232"
    },
    "228": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x72AB489F"
    },
    "235": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "236": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245"
    },
    "239": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "240": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "243": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "REVERT",
      "path": "10"
    },
    "244": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "246": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7F19651"
    },
    "251": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "256": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "257": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x13029E03"
    },
    "262": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "263": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15B"
    },
    "266": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "267": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "268": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x144DDEFC"
    },
    "273": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "274": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16D"
    },
    "277": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1821AA62"
    },
    "284": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "285": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CF"
    },
    "288": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x31888D88"
    },
    "295": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "EQ",
      "path": "10"
    },
    "296": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D7"
    },
    "299": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "300": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "301": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "DUP1",
      "path": "10"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        286,
        5358
      ],
      "op": "REVERT",
      "path": "10"
    },
    "305": {
      "offset": [
        942,
        971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "306": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "308": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "309": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x141"
    },
    "312": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "313": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "318": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "AND",
      "path": "9"
    },
    "319": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "DUP2",
      "path": "9"
    },
    "320": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "JUMP",
      "path": "9"
    },
    "321": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "322": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "324": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "325": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "SWAP2"
    },
    "332": {
      "op": "AND"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "offset": [
        942,
        971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "339": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "341": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "342": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "DUP1",
      "path": "9"
    },
    "343": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "344": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "SUB",
      "path": "9"
    },
    "345": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "346": {
      "fn": null,
      "offset": [
        942,
        971
      ],
      "op": "RETURN",
      "path": "9"
    },
    "347": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1641,
        1743
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "348": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1717,
        1729
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x4"
    },
    "350": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1717,
        1736
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "351": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1641,
        1743
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "352": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1641,
        1743
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "354": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1641,
        1743
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1641,
        1743
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x152"
    },
    "364": {
      "op": "JUMP"
    },
    "365": {
      "offset": [
        271,
        314
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "366": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AA"
    },
    "369": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B"
    },
    "372": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "373": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "375": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10DC"
    },
    "378": {
      "fn": "DataProviders.getNodeRequestsLength",
      "jump": "i",
      "offset": [
        271,
        314
      ],
      "op": "JUMP",
      "path": "8"
    },
    "379": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "380": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "382": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "384": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DUP2",
      "path": "8"
    },
    "385": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "386": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "387": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "388": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DUP2",
      "path": "8"
    },
    "389": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "390": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "392": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "393": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "394": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DUP1",
      "path": "8"
    },
    "395": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "396": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "398": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "399": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "400": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "ADD",
      "path": "8"
    },
    "401": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "offset": [
        271,
        314
      ],
      "op": "DUP3",
      "path": "8"
    },
    "411": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "AND",
      "path": "8"
    },
    "412": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "417": {
      "op": "SHL"
    },
    "418": {
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "419": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DIV",
      "path": "8"
    },
    "420": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "422": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "AND",
      "path": "8"
    },
    "423": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "424": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DUP4",
      "path": "8"
    },
    "425": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "JUMP",
      "path": "8"
    },
    "426": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "427": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "429": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "DUP1",
      "path": "8"
    },
    "430": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        271,
        314
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "op": "SWAP1"
    },
    "440": {
      "op": "SWAP5"
    },
    "441": {
      "op": "AND"
    },
    "442": {
      "op": "DUP5"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "SWAP2"
    },
    "445": {
      "op": "ISZERO"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "DUP5"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "SWAP1"
    },
    "453": {
      "op": "DUP3"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "op": "MSTORE"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "offset": [
        271,
        314
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x152"
    },
    "462": {
      "op": "JUMP"
    },
    "463": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1542,
        1635
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "464": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1611,
        1621
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x2"
    },
    "466": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1611,
        1628
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "467": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1542,
        1635
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15F"
    },
    "470": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1542,
        1635
      ],
      "op": "JUMP",
      "path": "9"
    },
    "471": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "472": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EA"
    },
    "475": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E5"
    },
    "478": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "479": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "481": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FE"
    },
    "484": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "485": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "486": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x386"
    },
    "489": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "490": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "491": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "493": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "494": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x152"
    },
    "497": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "498": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "499": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1177"
    },
    "502": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "503": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "504": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20A"
    },
    "507": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x205"
    },
    "510": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "511": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "513": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x119A"
    },
    "516": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMP",
      "path": "9"
    },
    "517": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "518": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C9"
    },
    "521": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMP",
      "path": "9"
    },
    "522": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "523": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "STOP",
      "path": "9"
    },
    "524": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "525": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20A"
    },
    "528": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21A"
    },
    "531": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "532": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "534": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11C4"
    },
    "537": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMP",
      "path": "9"
    },
    "538": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "539": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5E1"
    },
    "542": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMP",
      "path": "9"
    },
    "543": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "544": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20A"
    },
    "547": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22D"
    },
    "550": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "551": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "553": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x119A"
    },
    "556": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "i",
      "offset": [
        694,
        948
      ],
      "op": "JUMP",
      "path": "8"
    },
    "557": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "558": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x880"
    },
    "561": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "i",
      "offset": [
        694,
        948
      ],
      "op": "JUMP",
      "path": "8"
    },
    "562": {
      "offset": [
        1096,
        1133
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "563": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AA"
    },
    "566": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x240"
    },
    "569": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "570": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "572": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11FD"
    },
    "575": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "i",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMP",
      "path": "9"
    },
    "576": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "577": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x909"
    },
    "580": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "i",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMP",
      "path": "9"
    },
    "581": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3494,
        3707
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "582": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3494,
        3707
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20A"
    },
    "585": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3494,
        3707
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x94C"
    },
    "588": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3494,
        3707
      ],
      "op": "JUMP",
      "path": "9"
    },
    "589": {
      "offset": [
        865,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "590": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15F"
    },
    "593": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25B"
    },
    "596": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "597": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "599": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10DC"
    },
    "602": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        865,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "603": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "604": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "606": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "608": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "609": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "611": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "612": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "613": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "614": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "616": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "617": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "618": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "619": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "620": {
      "fn": "DataProviders.declineNode",
      "offset": [
        865,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "621": {
      "offset": [
        1462,
        1492
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "622": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "624": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "625": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x141"
    },
    "628": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "629": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH6",
      "path": "10",
      "value": "0x10000000000"
    },
    "636": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "637": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "DIV",
      "path": "10"
    },
    "638": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "643": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "AND",
      "path": "10"
    },
    "644": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "DUP2",
      "path": "10"
    },
    "645": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1462,
        1492
      ],
      "op": "JUMP",
      "path": "10"
    },
    "646": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "647": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20A"
    },
    "650": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x294"
    },
    "653": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "654": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "656": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1216"
    },
    "659": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMP",
      "path": "10"
    },
    "660": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "661": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA54"
    },
    "664": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMP",
      "path": "10"
    },
    "665": {
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "666": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AC"
    },
    "669": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A7"
    },
    "672": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "673": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "675": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11FD"
    },
    "678": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "679": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "680": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF5"
    },
    "683": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "684": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "685": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "687": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "688": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x152"
    },
    "691": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP15",
      "path": "10"
    },
    "692": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP14",
      "path": "10"
    },
    "693": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP13",
      "path": "10"
    },
    "694": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP12",
      "path": "10"
    },
    "695": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "696": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "697": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "698": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "699": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "700": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "701": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "702": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "703": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "704": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "705": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "706": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1231"
    },
    "709": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "710": {
      "offset": [
        1390,
        1416
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "711": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "713": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "714": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x141"
    },
    "717": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "718": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "723": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "AND",
      "path": "10"
    },
    "724": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "DUP2",
      "path": "10"
    },
    "725": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1390,
        1416
      ],
      "op": "JUMP",
      "path": "10"
    },
    "726": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3725,
        3936
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "727": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3725,
        3936
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20A"
    },
    "730": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3725,
        3936
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD91"
    },
    "733": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "i",
      "offset": [
        3725,
        3936
      ],
      "op": "JUMP",
      "path": "10"
    },
    "734": {
      "offset": [
        977,
        1002
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "735": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "737": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "738": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x141"
    },
    "741": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "742": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "748": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "749": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "DIV",
      "path": "9"
    },
    "750": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "755": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "AND",
      "path": "9"
    },
    "756": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "DUP2",
      "path": "9"
    },
    "757": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        977,
        1002
      ],
      "op": "JUMP",
      "path": "9"
    },
    "758": {
      "offset": [
        912,
        936
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "759": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x309"
    },
    "762": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x304"
    },
    "765": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "766": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "768": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11FD"
    },
    "771": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "i",
      "offset": [
        912,
        936
      ],
      "op": "JUMP",
      "path": "9"
    },
    "772": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "773": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE3E"
    },
    "776": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "i",
      "offset": [
        912,
        936
      ],
      "op": "JUMP",
      "path": "9"
    },
    "777": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "778": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "780": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP1",
      "path": "9"
    },
    "781": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "op": "SWAP1"
    },
    "791": {
      "op": "SWAP9"
    },
    "792": {
      "op": "AND"
    },
    "793": {
      "op": "DUP9"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "op": "SWAP6"
    },
    "796": {
      "op": "ISZERO"
    },
    "797": {
      "op": "ISZERO"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "op": "DUP9"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "SWAP4"
    },
    "804": {
      "op": "ISZERO"
    },
    "805": {
      "op": "ISZERO"
    },
    "806": {
      "op": "SWAP5"
    },
    "807": {
      "op": "DUP7"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "SWAP5"
    },
    "810": {
      "op": "SWAP1"
    },
    "811": {
      "op": "SWAP5"
    },
    "812": {
      "op": "MSTORE"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "815": {
      "op": "DUP6"
    },
    "816": {
      "op": "ADD"
    },
    "817": {
      "op": "SWAP2"
    },
    "818": {
      "op": "SWAP1"
    },
    "819": {
      "op": "SWAP2"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "823": {
      "op": "DUP5"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "DUP4"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "op": "SWAP2"
    },
    "831": {
      "op": "SWAP1"
    },
    "832": {
      "op": "SWAP2"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "836": {
      "op": "DUP3"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "MSTORE"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x152"
    },
    "845": {
      "op": "JUMP"
    },
    "846": {
      "offset": [
        1423,
        1456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "847": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "849": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "850": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "853": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "854": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0x100000000"
    },
    "860": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "861": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "DIV",
      "path": "10"
    },
    "862": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "864": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "AND",
      "path": "10"
    },
    "865": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "DUP2",
      "path": "10"
    },
    "866": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "867": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "868": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "870": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        1423,
        1456
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "871": {
      "op": "SWAP1"
    },
    "872": {
      "op": "ISZERO"
    },
    "873": {
      "op": "ISZERO"
    },
    "874": {
      "op": "DUP2"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "offset": [
        1423,
        1456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x152"
    },
    "882": {
      "op": "JUMP"
    },
    "883": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "884": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20A"
    },
    "887": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "890": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "891": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "893": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12F7"
    },
    "896": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "i",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "897": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "898": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9B"
    },
    "901": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "i",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "902": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "903": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2589,
        2597
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x6"
    },
    "905": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2589,
        2597
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "906": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2556,
        2569
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "908": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2556,
        2569
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "909": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2589,
        2597
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "914": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2589,
        2597
      ],
      "op": "AND",
      "path": "10"
    },
    "915": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E3"
    },
    "918": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "919": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "921": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "DUP2",
      "path": "10"
    },
    "930": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "933": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "935": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "DUP3",
      "path": "10"
    },
    "936": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "ADD",
      "path": "10"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH32",
      "value": "0x4E6F20747261696E696E6720706C616E73206372656174656400000000000000"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "980": {
      "op": "DUP3"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "MSTORE"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "985": {
      "op": "ADD"
    },
    "986": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "987": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "989": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "990": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "DUP1",
      "path": "10"
    },
    "991": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "992": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "SUB",
      "path": "10"
    },
    "993": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "994": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "995": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2581,
        2631
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "996": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2662
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x6"
    },
    "998": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2662
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "999": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1001": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2653
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1002": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1004": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1005": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2666
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3FE"
    },
    "1008": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2666
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1009": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2665,
        2666
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1011": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2665,
        2666
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1012": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2662
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1017": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2662
      ],
      "op": "AND",
      "path": "10"
    },
    "1018": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2666
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13EC"
    },
    "1021": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2654,
        2666
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1022": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2654,
        2666
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1023": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1028": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "AND",
      "path": "10"
    },
    "1029": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1030": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1031": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1033": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1034": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1035": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "ADD",
      "path": "10"
    },
    "1036": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1037": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1038": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1039": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1040": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1042": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1043": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1044": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "ADD",
      "path": "10"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1048": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1049": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2667
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1050": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1051": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1052": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1053": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2674
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "1055": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2674
      ],
      "op": "ADD",
      "path": "10"
    },
    "1056": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1057": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1058": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1059": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1060": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2684
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "op": "SUB"
    },
    "1069": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1070": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "AND",
      "path": "10"
    },
    "1071": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1072": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1073": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2694
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1075": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2694
      ],
      "op": "ADD",
      "path": "10"
    },
    "1076": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1077": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1078": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1079": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1080": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2648,
        2707
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1081": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1082": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1083": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x443"
    },
    "1086": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1087": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "1090": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1091": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1092": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1093": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1095": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1096": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1098": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1099": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1100": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DIV",
      "path": "10"
    },
    "1101": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MUL",
      "path": "10"
    },
    "1102": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1104": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1105": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1107": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1108": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1109": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1110": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1111": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1113": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1114": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1115": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1116": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1117": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1118": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1119": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1120": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1121": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1123": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1124": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1125": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1126": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1127": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46F"
    },
    "1130": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1131": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "1134": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "i",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1135": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1136": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1137": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1138": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4BC"
    },
    "1141": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1142": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1143": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1145": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "LT",
      "path": "10"
    },
    "1146": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x491"
    },
    "1149": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1150": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "1153": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1154": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1155": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1156": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DIV",
      "path": "10"
    },
    "1157": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MUL",
      "path": "10"
    },
    "1158": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1159": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1160": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1161": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1163": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1164": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1165": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4BC"
    },
    "1168": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1169": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1170": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1171": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1172": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1173": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1174": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1176": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1177": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1179": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1181": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1182": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1183": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1184": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1185": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1186": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1187": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1188": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1189": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1191": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1192": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1193": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1195": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1196": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1197": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1198": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "GT",
      "path": "10"
    },
    "1199": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x49F"
    },
    "1202": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1203": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1204": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1205": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SUB",
      "path": "10"
    },
    "1206": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1208": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "AND",
      "path": "10"
    },
    "1209": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1210": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "ADD",
      "path": "10"
    },
    "1211": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1212": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1213": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1214": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1215": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1216": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1217": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1218": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1219": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2641,
        2707
      ],
      "op": "POP",
      "path": "10"
    },
    "1220": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1221": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1222": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "POP",
      "path": "10"
    },
    "1223": {
      "fn": "TrainingPlans.getRoundModel",
      "offset": [
        2477,
        2714
      ],
      "op": "POP",
      "path": "10"
    },
    "1224": {
      "fn": "TrainingPlans.getRoundModel",
      "jump": "o",
      "offset": [
        2477,
        2714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1225": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1226": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2045,
        2055
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 4
    },
    "1227": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1229": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1230": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1231": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1232": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2044
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1234": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1236": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1237": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1239": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1240": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1241": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2056
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1242": {
      "branch": 39,
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2035,
        2061
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1243": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x526"
    },
    "1246": {
      "branch": 39,
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1247": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1249": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1258": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1261": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1263": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1264": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "ADD",
      "path": "9"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1270": {
      "op": "DUP3"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C7265616479206D61646520726571756573742E000000"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "1317": {
      "op": "JUMP"
    },
    "1318": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2027,
        2095
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1319": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2115,
        2125
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 5
    },
    "1320": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1322": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1323": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1324": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1325": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2129,
        2130
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1327": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1329": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1330": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1331": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1332": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1334": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1335": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1336": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2126
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1337": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2130
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1338": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2130
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1339": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2105,
        2130
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1340": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 6
    },
    "1341": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1342": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1344": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1345": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "ADD",
      "path": "9"
    },
    "1346": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1347": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1348": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1349": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1350": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1351": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "1352": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1353": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1354": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1355": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1356": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "ADD",
      "path": "9"
    },
    "1357": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1358": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1359": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1360": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1361": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1362": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "ADD",
      "path": "9"
    },
    "1363": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1364": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1365": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2158,
        2281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1366": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1368": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1369": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1370": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1371": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1372": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "ADD",
      "path": "9"
    },
    "1373": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1374": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1375": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1376": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1377": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1378": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1379": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1380": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1382": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1383": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1384": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MUL",
      "path": "9"
    },
    "1385": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1418": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1419": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "ADD",
      "path": "9"
    },
    "1420": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1421": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1422": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1423": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1424": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1425": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MUL",
      "path": "9"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "op": "NOT"
    },
    "1441": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1442": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "1443": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "AND",
      "path": "9"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1453": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1454": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1455": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "AND",
      "path": "9"
    },
    "1456": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1457": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1458": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1459": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "OR",
      "path": "9"
    },
    "1460": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1461": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1462": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1463": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "OR",
      "path": "9"
    },
    "1464": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1465": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1466": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1467": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
    },
    "1500": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1501": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1502": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "ADD",
      "path": "9"
    },
    "1503": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2140,
        2282
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1504": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "o",
      "offset": [
        1953,
        2289
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1505": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1506": {
      "offset": [
        1200,
        1210
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1507": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1509": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1510": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1511": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1512": {
      "offset": [
        1190,
        1199
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1514": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1516": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1517": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1519": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1520": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1521": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1522": {
      "offset": [
        1215,
        1216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1524": {
      "op": "GT"
    },
    "1525": {
      "offset": [
        1190,
        1216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1526": {
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x611"
    },
    "1529": {
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1530": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1532": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "offset": [
        1169,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1541": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1542": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1544": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "1545": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "1548": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1549": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144C"
    },
    "1552": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1553": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1554": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2900,
        2912
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 7,
      "value": "0x4"
    },
    "1556": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2900,
        2919
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1557": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x659"
    },
    "1560": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1561": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1563": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1572": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1575": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1577": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1578": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "ADD",
      "path": "9"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH22",
      "value": "0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "1624": {
      "op": "JUMP"
    },
    "1625": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2892,
        2950
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1626": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3030
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x2"
    },
    "1628": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3037
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1629": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3041
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x667"
    },
    "1632": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3041
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1633": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3040,
        3041
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1635": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3041
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1493"
    },
    "1638": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3020,
        3041
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1639": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3020,
        3041
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1640": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        2982
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1642": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3002
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1643": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3002
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1644": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        2969
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1646": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        2969
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1647": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1649": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1650": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3006
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x67C"
    },
    "1653": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3006
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1654": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        2969
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1655": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        2969
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1656": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3006
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14AB"
    },
    "1659": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2983,
        3006
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1660": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2983,
        3006
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1661": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1662": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1663": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1664": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "LT",
      "path": "9"
    },
    "1665": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x68C"
    },
    "1668": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1669": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x68C"
    },
    "1672": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14C2"
    },
    "1675": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2970,
        3007
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1676": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1677": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1679": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1680": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1681": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1682": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1684": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1685": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1686": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1687": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1689": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1690": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1691": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "MUL",
      "path": "9"
    },
    "1692": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1693": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1694": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3007
      ],
      "op": "ADD",
      "path": "9"
    },
    "1695": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "AND",
      "path": "9"
    },
    "1705": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1706": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1707": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1708": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "ADD",
      "path": "9"
    },
    "1709": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1710": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1711": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1712": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1713": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1715": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "ADD",
      "path": "9"
    },
    "1716": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1717": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3017
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1718": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2960,
        3041
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1719": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3059
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x3"
    },
    "1721": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1722": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1723": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1725": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1726": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3059
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1727": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1729": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3059
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1730": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DB"
    },
    "1733": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1734": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1735": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2970,
        3016
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1736": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1741": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "1747": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1748": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1749": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "DIV",
      "path": "9"
    },
    "1750": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "AND",
      "path": "9"
    },
    "1751": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14D8"
    },
    "1754": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3052,
        3064
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1755": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1756": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1757": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "POP",
      "path": "9"
    },
    "1758": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1761": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "EXP",
      "path": "9"
    },
    "1762": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1763": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1764": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1765": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1770": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "MUL",
      "path": "9"
    },
    "1771": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "NOT",
      "path": "9"
    },
    "1772": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "AND",
      "path": "9"
    },
    "1773": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1774": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1775": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1780": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "AND",
      "path": "9"
    },
    "1781": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "MUL",
      "path": "9"
    },
    "1782": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "OR",
      "path": "9"
    },
    "1783": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1784": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1785": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3052,
        3064
      ],
      "op": "POP",
      "path": "9"
    },
    "1786": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3084
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x2"
    },
    "1788": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1790": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1791": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1792": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "1794": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1795": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1797": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1798": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1799": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3131
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1801": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3154,
        3155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1803": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1805": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3151
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1806": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3151
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1807": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3151
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1808": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3151
      ],
      "op": "POP",
      "path": "9"
    },
    "1809": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x71A"
    },
    "1812": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3155
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1813": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1814": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14AB"
    },
    "1817": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3132,
        3155
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1818": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3132,
        3155
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1819": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1820": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1821": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1822": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "LT",
      "path": "9"
    },
    "1823": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x72A"
    },
    "1826": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1827": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x72A"
    },
    "1830": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14C2"
    },
    "1833": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3119,
        3156
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1834": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1835": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1837": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1838": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1839": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1840": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1842": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1843": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1844": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1845": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1847": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1848": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1849": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "MUL",
      "path": "9"
    },
    "1850": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "ADD",
      "path": "9"
    },
    "1851": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1861": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1862": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "AND",
      "path": "9"
    },
    "1863": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1864": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1865": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1867": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1868": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1869": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1870": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1871": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1872": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1873": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP12",
      "path": "9"
    },
    "1874": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1875": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1876": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1878": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1879": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1880": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1881": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1882": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1883": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1884": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1885": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1887": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1888": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1889": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1890": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1891": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1892": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1893": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "1895": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1896": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1897": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1898": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1899": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1900": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1901": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1903": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1904": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP11",
      "path": "9"
    },
    "1905": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1906": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1907": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1908": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1909": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1911": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1912": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1913": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1918": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "1924": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1925": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1926": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "DIV",
      "path": "9"
    },
    "1927": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1928": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "AND",
      "path": "9"
    },
    "1929": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC0"
    },
    "1931": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "1932": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1933": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "ADD",
      "path": "9"
    },
    "1934": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3090,
        3358
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1935": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1936": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1937": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1938": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1939": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1940": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP16",
      "path": "9"
    },
    "1941": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1942": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP14",
      "path": "9"
    },
    "1943": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP12",
      "path": "9"
    },
    "1944": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1945": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1946": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP12",
      "path": "9"
    },
    "1947": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1948": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1949": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1950": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "1952": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1953": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP16",
      "path": "9"
    },
    "1954": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MUL",
      "path": "9"
    },
    "1955": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1956": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1957": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1958": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP10",
      "path": "9"
    },
    "1959": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP15",
      "path": "9"
    },
    "1960": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1961": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1962": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "1963": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP15",
      "path": "9"
    },
    "1964": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1965": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1966": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1967": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MUL",
      "path": "9"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "NOT"
    },
    "1980": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "1981": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1982": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MUL",
      "path": "9"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1995": {
      "op": "SHL"
    },
    "1996": {
      "op": "SUB"
    },
    "1997": {
      "op": "NOT"
    },
    "1998": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1999": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP12",
      "path": "9"
    },
    "2000": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "AND",
      "path": "9"
    },
    "2001": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP16",
      "path": "9"
    },
    "2002": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2003": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP10",
      "path": "9"
    },
    "2004": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "AND",
      "path": "9"
    },
    "2005": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP15",
      "path": "9"
    },
    "2006": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2007": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP15",
      "path": "9"
    },
    "2008": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "OR",
      "path": "9"
    },
    "2009": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "2010": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2011": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "2012": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "OR",
      "path": "9"
    },
    "2013": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2014": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2015": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2016": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "AND",
      "path": "9"
    },
    "2017": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2018": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2019": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2020": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "OR",
      "path": "9"
    },
    "2021": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP12",
      "path": "9"
    },
    "2022": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2023": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2024": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP10",
      "path": "9"
    },
    "2025": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2026": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2027": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP11",
      "path": "9"
    },
    "2028": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2029": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2030": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2031": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP9",
      "path": "9"
    },
    "2032": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2033": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2034": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2035": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP10",
      "path": "9"
    },
    "2036": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2037": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2038": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2039": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2040": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2041": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2042": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2043": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2044": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2045": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2046": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2047": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2048": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2049": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2050": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2051": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2052": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2053": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2054": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2056": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2057": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2058": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2059": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "2060": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2061": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2062": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2063": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3074,
        3359
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2064": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 11
    },
    "2065": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2066": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2067": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2068": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3340,
        3347
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2069": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2070": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3156
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2071": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x822"
    },
    "2074": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2075": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2076": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3119,
        3165
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2077": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "AND",
      "path": "9"
    },
    "2078": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14D8"
    },
    "2081": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3369,
        3385
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2082": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2083": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2084": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "POP",
      "path": "9"
    },
    "2085": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "2088": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "EXP",
      "path": "9"
    },
    "2089": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2090": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2091": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2092": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2097": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "MUL",
      "path": "9"
    },
    "2098": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "NOT",
      "path": "9"
    },
    "2099": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "AND",
      "path": "9"
    },
    "2100": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2101": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2102": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2107": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "AND",
      "path": "9"
    },
    "2108": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "MUL",
      "path": "9"
    },
    "2109": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "OR",
      "path": "9"
    },
    "2110": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2111": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2112": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3369,
        3385
      ],
      "op": "POP",
      "path": "9"
    },
    "2113": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 12,
      "value": "0x4"
    },
    "2115": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2116": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2117": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2118": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x851"
    },
    "2121": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2122": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x851"
    },
    "2125": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1500"
    },
    "2128": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3395,
        3413
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2129": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2130": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2132": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2133": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2134": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2135": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2137": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2138": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2139": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "NOT"
    },
    "2144": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2145": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2146": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "ADD",
      "path": "9"
    },
    "2147": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2148": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2149": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "MUL",
      "path": "9"
    },
    "2150": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "ADD",
      "path": "9"
    },
    "2151": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2152": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "op": "NOT"
    },
    "2162": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "AND",
      "path": "9"
    },
    "2163": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2164": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2165": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2167": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "ADD",
      "path": "9"
    },
    "2168": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2169": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2170": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3395,
        3413
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "fn": "DataProviders.acceptNode",
      "jump": "o",
      "offset": [
        2782,
        3420
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2176": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        694,
        948
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2177": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        813,
        823
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 13
    },
    "2178": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        788
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2180": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2181": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2182": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2183": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2185": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2186": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2187": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2188": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2190": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2191": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        800
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2192": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        809
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        809
      ],
      "op": "AND",
      "path": "8"
    },
    "2202": {
      "branch": 38,
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        780,
        823
      ],
      "op": "EQ",
      "path": "8"
    },
    "2203": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8D8"
    },
    "2206": {
      "branch": 38,
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2207": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2209": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2218": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2221": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2223": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2224": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "ADD",
      "path": "8"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH15",
      "value": "0x109D5A5B19195C881B9BDD081CD95D"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2251": {
      "op": "SHL"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3DA"
    },
    "2263": {
      "op": "JUMP"
    },
    "2264": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        772,
        843
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2265": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        862,
        872
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 14
    },
    "2266": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        861
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2268": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2269": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2270": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2271": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2273": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2274": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2275": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2276": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2278": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2279": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        873
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2280": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2281": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2282": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2283": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2284": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2289": {
      "op": "SHL"
    },
    "2290": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "MUL",
      "path": "8"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "NOT"
    },
    "2297": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2298": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2299": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "AND",
      "path": "8"
    },
    "2300": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2301": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2302": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2303": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "OR",
      "path": "8"
    },
    "2304": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2305": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        853,
        889
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        899,
        929
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 15
    },
    "2309": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        899,
        929
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2310": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        899,
        929
      ],
      "op": "ADD",
      "path": "8"
    },
    "2311": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        899,
        941
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2312": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "o",
      "offset": [
        694,
        948
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2313": {
      "offset": [
        1096,
        1133
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2314": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2316": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2317": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2318": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2319": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2320": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "LT",
      "path": "9"
    },
    "2321": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x919"
    },
    "2324": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2325": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2327": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2328": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2329": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2330": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2332": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2333": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2334": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2335": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2337": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2338": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2339": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2340": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2342": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2343": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2344": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "MUL",
      "path": "9"
    },
    "2345": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "ADD",
      "path": "9"
    },
    "2346": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2347": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2348": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2350": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2351": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2352": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "ADD",
      "path": "9"
    },
    "2353": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "offset": [
        1096,
        1133
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2363": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "AND",
      "path": "9"
    },
    "2364": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2372": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2373": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DIV",
      "path": "9"
    },
    "2374": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2376": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "AND",
      "path": "9"
    },
    "2377": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2378": {
      "fn": "Builders.setBuilderPublickey",
      "offset": [
        1096,
        1133
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2379": {
      "fn": "Builders.setBuilderPublickey",
      "jump": "o",
      "offset": [
        1096,
        1133
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2380": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3494,
        3707
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2381": {
      "offset": [
        1200,
        1210
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2382": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2384": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2385": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2386": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2387": {
      "offset": [
        1190,
        1199
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2389": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2391": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2392": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2394": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2395": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2396": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1190,
        1211
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2397": {
      "offset": [
        1215,
        1216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2399": {
      "op": "GT"
    },
    "2400": {
      "offset": [
        1190,
        1216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2401": {
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x97C"
    },
    "2404": {
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2405": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2407": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "offset": [
        1169,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2416": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2417": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2419": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "2420": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "2423": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2424": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144C"
    },
    "2427": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2428": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2429": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3563
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 16,
      "value": "0x4"
    },
    "2431": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3570
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2432": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9C4"
    },
    "2435": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2436": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2438": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2439": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2447": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2450": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2452": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2453": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "ADD",
      "path": "9"
    },
    "2454": {
      "op": "MSTORE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2459": {
      "op": "DUP3"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH22",
      "value": "0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2490": {
      "op": "DUP3"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "op": "MSTORE"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "2499": {
      "op": "JUMP"
    },
    "2500": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3543,
        3601
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2501": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3671,
        3672
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 17,
      "value": "0x2"
    },
    "2503": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3620
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2505": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2507": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2509": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3656,
        3657
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2511": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2513": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3653
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2514": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3653
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2515": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3653
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2516": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3653
      ],
      "op": "POP",
      "path": "9"
    },
    "2517": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3657
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9DE"
    },
    "2520": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3657
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2521": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3657
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2522": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3657
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14AB"
    },
    "2525": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2526": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2527": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2528": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2529": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2530": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "LT",
      "path": "9"
    },
    "2531": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9EE"
    },
    "2534": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2535": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9EE"
    },
    "2538": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14C2"
    },
    "2541": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3621,
        3658
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2542": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2543": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2545": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2546": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2547": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2548": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2550": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2551": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2552": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2553": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2555": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2556": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2557": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "MUL",
      "path": "9"
    },
    "2558": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2559": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2560": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3658
      ],
      "op": "ADD",
      "path": "9"
    },
    "2561": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3667
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3621,
        3667
      ],
      "op": "AND",
      "path": "9"
    },
    "2571": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2572": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2573": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2574": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "ADD",
      "path": "9"
    },
    "2575": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2576": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2577": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2578": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2579": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2581": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "ADD",
      "path": "9"
    },
    "2582": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2583": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3668
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2584": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3672
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2585": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3694
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x4"
    },
    "2587": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2588": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2589": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2590": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA29"
    },
    "2593": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2594": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA29"
    },
    "2597": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1500"
    },
    "2600": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3682,
        3700
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2601": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2602": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2604": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2605": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2606": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2607": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2609": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2610": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2611": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "NOT"
    },
    "2616": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2617": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2618": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "ADD",
      "path": "9"
    },
    "2619": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2620": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2621": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "MUL",
      "path": "9"
    },
    "2622": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "ADD",
      "path": "9"
    },
    "2623": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2624": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "op": "NOT"
    },
    "2634": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "AND",
      "path": "9"
    },
    "2635": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2636": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2637": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2639": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "ADD",
      "path": "9"
    },
    "2640": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2641": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2642": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3682,
        3700
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2643": {
      "fn": "DataProviders.declineNode",
      "jump": "o",
      "offset": [
        3494,
        3707
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2644": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2645": {
      "offset": [
        1200,
        1210
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2646": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2648": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2649": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2650": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2651": {
      "offset": [
        1190,
        1199
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2653": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2655": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2656": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2658": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2659": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2660": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1190,
        1211
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2661": {
      "offset": [
        1215,
        1216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2663": {
      "op": "GT"
    },
    "2664": {
      "offset": [
        1190,
        1216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2665": {
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA84"
    },
    "2668": {
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2669": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2671": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "offset": [
        1169,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2680": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2681": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2683": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "2684": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "2687": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2688": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144C"
    },
    "2691": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2692": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2693": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x6"
    },
    "2695": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2696": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0x100000000"
    },
    "2702": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2703": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "DIV",
      "path": "10"
    },
    "2704": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2706": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4821,
        4834
      ],
      "op": "AND",
      "path": "10"
    },
    "2707": {
      "branch": 32,
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4820,
        4834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2708": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF4"
    },
    "2711": {
      "branch": 32,
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2712": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2714": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2723": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2726": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2728": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2729": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "ADD",
      "path": "10"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH32",
      "value": "0x4E6F64652063616E2774206368616E676520737461747573207768696C652070"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2773": {
      "op": "DUP3"
    },
    "2774": {
      "op": "ADD"
    },
    "2775": {
      "op": "MSTORE"
    },
    "2776": {
      "op": "PUSH12",
      "value": "0x3630B710393AB73734B73397"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2794": {
      "op": "DUP3"
    },
    "2795": {
      "op": "ADD"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DA"
    },
    "2803": {
      "op": "JUMP"
    },
    "2804": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4812,
        4883
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2805": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4918,
        4928
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2806": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2808": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2809": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2810": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2811": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2813": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2815": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2816": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2818": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2819": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2820": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4929
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2821": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2822": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2823": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2824": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2825": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2827": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4907
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2828": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4933
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB17"
    },
    "2831": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4933
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2832": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4932,
        4933
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2834": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4932,
        4933
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2835": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4933
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AB"
    },
    "2838": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        4908,
        4933
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2839": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4908,
        4933
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2840": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2841": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2842": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2843": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "LT",
      "path": "10"
    },
    "2844": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB27"
    },
    "2847": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2848": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB27"
    },
    "2851": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C2"
    },
    "2854": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        4897,
        4934
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2855": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2856": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2858": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2859": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2860": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2861": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2863": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2864": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2865": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2866": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2868": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2869": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2870": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "MUL",
      "path": "10"
    },
    "2871": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4934
      ],
      "op": "ADD",
      "path": "10"
    },
    "2872": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4944
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2879": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4944
      ],
      "op": "DIV",
      "path": "10"
    },
    "2880": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2882": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4944
      ],
      "op": "AND",
      "path": "10"
    },
    "2883": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2884": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2885": {
      "branch": 33,
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4897,
        4954
      ],
      "op": "EQ",
      "path": "10"
    },
    "2886": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4893,
        5039
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB97"
    },
    "2889": {
      "branch": 33,
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4893,
        5039
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2890": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4985,
        4991
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 20
    },
    "2891": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4984,
        5028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB68"
    },
    "2894": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4984,
        5028
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2895": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2897": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5024
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2898": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB63"
    },
    "2901": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2902": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5027,
        5028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2904": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5027,
        5028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2905": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5024
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2910": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5024
      ],
      "op": "AND",
      "path": "10"
    },
    "2911": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13EC"
    },
    "2914": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        5013,
        5028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2915": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5013,
        5028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2916": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4984,
        5028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB7C"
    },
    "2919": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4984,
        5028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2920": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4984,
        5028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2921": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2923": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5006
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2924": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5010
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB7C"
    },
    "2927": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5010
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2928": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5006
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2933": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5006
      ],
      "op": "AND",
      "path": "10"
    },
    "2934": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2936": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5010
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14D8"
    },
    "2939": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        4995,
        5010
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2940": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4995,
        5010
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2941": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        4981
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2943": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2944": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2945": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2950": {
      "op": "NOT"
    },
    "2951": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "AND",
      "path": "10"
    },
    "2952": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2957": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2958": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2959": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2960": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "AND",
      "path": "10"
    },
    "2961": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2962": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2963": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2964": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "OR",
      "path": "10"
    },
    "2965": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2966": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4970,
        5028
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2967": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        4893,
        5039
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2968": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5069,
        5079
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 21
    },
    "2969": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2971": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2972": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2973": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2974": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2976": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2978": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2979": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2981": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2982": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2983": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5080
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2984": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5098,
        5104
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2985": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5098,
        5104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2986": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2988": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2989": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5084
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB8"
    },
    "2992": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5084
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2993": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2995": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5083,
        5084
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2996": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5084
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AB"
    },
    "2999": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        5059,
        5084
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3000": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5059,
        5084
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3001": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3002": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3003": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3004": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "LT",
      "path": "10"
    },
    "3005": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC8"
    },
    "3008": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3009": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC8"
    },
    "3012": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C2"
    },
    "3015": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        5048,
        5085
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3016": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3017": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3019": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3020": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3021": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3022": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3024": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3025": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3026": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3027": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3029": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3030": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3031": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "MUL",
      "path": "10"
    },
    "3032": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5085
      ],
      "op": "ADD",
      "path": "10"
    },
    "3033": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3034": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3035": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3036": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3037": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "MUL",
      "path": "10"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "op": "NOT"
    },
    "3050": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3051": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3052": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "AND",
      "path": "10"
    },
    "3053": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3054": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3055": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3056": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "OR",
      "path": "10"
    },
    "3057": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3058": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        5048,
        5104
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "o",
      "offset": [
        4747,
        5111
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3061": {
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3062": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3064": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3066": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3067": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3069": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3070": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3071": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3072": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3074": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3075": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3076": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3077": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3078": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3080": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3081": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3082": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3083": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3085": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3086": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3087": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3088": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "op": "SUB"
    },
    "3097": {
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3098": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3099": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3100": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3101": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3102": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3103": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3104": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3109": {
      "op": "SHL"
    },
    "3110": {
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3111": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3112": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DIV",
      "path": "10"
    },
    "3113": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3118": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3119": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3120": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3121": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3122": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3A"
    },
    "3125": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3126": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "3129": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3130": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3131": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3132": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3134": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3135": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3137": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3138": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3139": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DIV",
      "path": "10"
    },
    "3140": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MUL",
      "path": "10"
    },
    "3141": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3143": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3144": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3146": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3147": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3148": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3149": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3150": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3152": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3153": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3154": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3155": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3156": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3157": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3158": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3159": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3160": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3162": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3163": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3164": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3165": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3166": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC66"
    },
    "3169": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3170": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "3173": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3174": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3175": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3176": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3177": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCB3"
    },
    "3180": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3181": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3182": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3184": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "LT",
      "path": "10"
    },
    "3185": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC88"
    },
    "3188": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3189": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3192": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3193": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3194": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3195": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DIV",
      "path": "10"
    },
    "3196": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MUL",
      "path": "10"
    },
    "3197": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3198": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3199": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3200": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3202": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3203": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3204": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCB3"
    },
    "3207": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3208": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3209": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3210": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3211": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3212": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3213": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3215": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3216": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3218": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3220": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3221": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3222": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3223": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3224": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3225": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3226": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3227": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3228": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3230": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3231": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3232": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3234": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3235": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3236": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3237": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "GT",
      "path": "10"
    },
    "3238": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC96"
    },
    "3241": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3242": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3243": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3244": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SUB",
      "path": "10"
    },
    "3245": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3247": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3248": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3249": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3250": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3251": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3252": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "POP",
      "path": "10"
    },
    "3253": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "POP",
      "path": "10"
    },
    "3254": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "POP",
      "path": "10"
    },
    "3255": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "POP",
      "path": "10"
    },
    "3256": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "POP",
      "path": "10"
    },
    "3257": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3258": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3259": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3261": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3262": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3263": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3264": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC8"
    },
    "3267": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3268": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "3271": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3272": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3273": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3274": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3276": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3277": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3279": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3280": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3281": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DIV",
      "path": "10"
    },
    "3282": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MUL",
      "path": "10"
    },
    "3283": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3285": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3286": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3288": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3289": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3290": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3291": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3292": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3294": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3295": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3296": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3297": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3298": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3299": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3300": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3301": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3302": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3304": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3305": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3306": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3307": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3308": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF4"
    },
    "3311": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3312": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1411"
    },
    "3315": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "i",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3316": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3317": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3318": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3319": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD41"
    },
    "3322": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3323": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3324": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3326": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "LT",
      "path": "10"
    },
    "3327": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD16"
    },
    "3330": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3331": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3334": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3335": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3336": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3337": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DIV",
      "path": "10"
    },
    "3338": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MUL",
      "path": "10"
    },
    "3339": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3340": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3341": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3342": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3344": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3345": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3346": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD41"
    },
    "3349": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3350": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3351": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3352": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3353": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3354": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3355": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3357": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3358": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3360": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3362": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3363": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3364": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3365": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3366": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3367": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3368": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3369": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3370": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3372": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3373": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3374": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3376": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3377": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3378": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3379": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "GT",
      "path": "10"
    },
    "3380": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD24"
    },
    "3383": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3384": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3385": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3386": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SUB",
      "path": "10"
    },
    "3387": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3389": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3390": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3391": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3392": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3393": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "op": "POP"
    },
    "3397": {
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3399": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3400": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3401": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3402": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3404": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3405": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3406": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3407": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3409": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3410": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3411": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3412": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3414": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3415": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3416": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3417": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "3419": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3420": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3421": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3422": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "3424": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP10",
      "path": "10"
    },
    "3425": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3426": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3427": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3429": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP11",
      "path": "10"
    },
    "3430": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3431": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3432": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "3434": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP12",
      "path": "10"
    },
    "3435": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3436": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3437": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "3439": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3440": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP12",
      "path": "10"
    },
    "3441": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "ADD",
      "path": "10"
    },
    "3442": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3443": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "3444": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "3445": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "3447": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3448": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "3449": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3450": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "3451": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "3452": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3455": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3458": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3459": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3464": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3465": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3466": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "AND",
      "path": "10"
    },
    "3467": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3468": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3469": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3470": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3471": {
      "fn": "TrainingPlans.changeNodeStatus",
      "offset": [
        1342,
        1384
      ],
      "op": "DUP15",
      "path": "10"
    },
    "3472": {
      "fn": "TrainingPlans.changeNodeStatus",
      "jump": "o",
      "offset": [
        1342,
        1384
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3473": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3725,
        3936
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3474": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3792
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x6"
    },
    "3476": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3792
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3477": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3792
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3482": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3792
      ],
      "op": "AND",
      "path": "10"
    },
    "3483": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3796
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3484": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3796
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3485": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3796
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3486": {
      "branch": 34,
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3487": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDE2"
    },
    "3490": {
      "branch": 34,
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3841
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3814
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3494": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3814
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3495": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3831,
        3841
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3496": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3831,
        3841
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3497": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3805
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3499": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3805
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3500": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3502": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3503": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3818
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC0"
    },
    "3506": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3818
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3507": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3817,
        3818
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3509": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3817,
        3818
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3510": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3814
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3515": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3814
      ],
      "op": "AND",
      "path": "10"
    },
    "3516": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3818
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13EC"
    },
    "3519": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "i",
      "offset": [
        3806,
        3818
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3520": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3806,
        3818
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3521": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3526": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "AND",
      "path": "10"
    },
    "3527": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3528": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3529": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3531": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3532": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "ADD",
      "path": "10"
    },
    "3533": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3534": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3535": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3536": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3537": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3539": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "ADD",
      "path": "10"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3542": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3819
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3543": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3827
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3827
      ],
      "op": "AND",
      "path": "10"
    },
    "3553": {
      "branch": 35,
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3800,
        3841
      ],
      "op": "EQ",
      "path": "10"
    },
    "3554": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3784,
        3841
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3555": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE2E"
    },
    "3558": {
      "branch": 35,
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3559": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3561": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3568": {
      "op": "SHL"
    },
    "3569": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3570": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3573": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3575": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3576": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "ADD",
      "path": "10"
    },
    "3577": {
      "op": "MSTORE"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "PUSH32",
      "value": "0x4F6E6C792063726561746F722063616E2061626F72742074686520706C616E00"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3620": {
      "op": "DUP3"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "MSTORE"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DA"
    },
    "3629": {
      "op": "JUMP"
    },
    "3630": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3763,
        3898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3631": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3921
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x6"
    },
    "3633": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3929
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3634": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3929
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3635": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "3641": {
      "op": "NOT"
    },
    "3642": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3929
      ],
      "op": "AND",
      "path": "10"
    },
    "3643": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3929
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3644": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        3908,
        3929
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3645": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "o",
      "offset": [
        3725,
        3936
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3646": {
      "offset": [
        912,
        936
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3647": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3649": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3650": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3651": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3652": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3653": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "LT",
      "path": "9"
    },
    "3654": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE4E"
    },
    "3657": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3658": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3660": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3661": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3662": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3663": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3665": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3666": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3667": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3668": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3670": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3671": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3672": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3673": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "3675": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3676": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3677": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "MUL",
      "path": "9"
    },
    "3678": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "ADD",
      "path": "9"
    },
    "3679": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3680": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3681": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3683": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3684": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "ADD",
      "path": "9"
    },
    "3685": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3686": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3688": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3689": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "ADD",
      "path": "9"
    },
    "3690": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3691": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3693": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3694": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "ADD",
      "path": "9"
    },
    "3695": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3696": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3698": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3699": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "3700": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "ADD",
      "path": "9"
    },
    "3701": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3708": {
      "op": "SHL"
    },
    "3709": {
      "op": "SUB"
    },
    "3710": {
      "offset": [
        912,
        936
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3711": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "AND",
      "path": "9"
    },
    "3712": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "3713": {
      "op": "POP"
    },
    "3714": {
      "offset": [
        912,
        936
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "offset": [
        912,
        936
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3722": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DIV",
      "path": "9"
    },
    "3723": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3724": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "AND",
      "path": "9"
    },
    "3725": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "offset": [
        912,
        936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3732": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "3733": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DIV",
      "path": "9"
    },
    "3734": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "AND",
      "path": "9"
    },
    "3735": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3736": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3737": {
      "fn": "TrainingPlans.abortPlan",
      "offset": [
        912,
        936
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3738": {
      "fn": "TrainingPlans.abortPlan",
      "jump": "o",
      "offset": [
        912,
        936
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3739": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3740": {
      "offset": [
        1200,
        1210
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3741": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3743": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3744": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3745": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3746": {
      "offset": [
        1190,
        1199
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3748": {
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3750": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3751": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3753": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3754": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3755": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1190,
        1211
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3756": {
      "offset": [
        1215,
        1216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3758": {
      "op": "GT"
    },
    "3759": {
      "offset": [
        1190,
        1216
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3760": {
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xECB"
    },
    "3763": {
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3764": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3766": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3773": {
      "op": "SHL"
    },
    "3774": {
      "offset": [
        1169,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3775": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3776": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3778": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3779": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "3782": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3783": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144C"
    },
    "3786": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "i",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3787": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        1169,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3788": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4307
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3790": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4307
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3791": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4265,
        4290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3793": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4265,
        4290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3794": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3796": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4298
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3797": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4265,
        4290
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3798": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4265,
        4290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3799": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4311
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEE8"
    },
    "3802": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4311
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3803": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4310,
        4311
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3805": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4310,
        4311
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3806": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4307
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3811": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4307
      ],
      "op": "AND",
      "path": "10"
    },
    "3812": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4311
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13EC"
    },
    "3815": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "i",
      "offset": [
        4299,
        4311
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3816": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4299,
        4311
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3817": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3822": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "AND",
      "path": "10"
    },
    "3823": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3824": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3825": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3827": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3828": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "ADD",
      "path": "10"
    },
    "3829": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3830": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3831": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3832": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3833": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3835": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "ADD",
      "path": "10"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3838": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3839": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4344
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x1"
    },
    "3841": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4344
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3842": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4344
      ],
      "op": "ADD",
      "path": "10"
    },
    "3843": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4344
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3844": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3845": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4293,
        4312
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3853": {
      "op": "SHL"
    },
    "3854": {
      "op": "SUB"
    },
    "3855": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4344
      ],
      "op": "AND",
      "path": "10"
    },
    "3856": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4348,
        4358
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3857": {
      "branch": 36,
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4330,
        4358
      ],
      "op": "EQ",
      "path": "10"
    },
    "3858": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6C"
    },
    "3861": {
      "branch": 36,
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3862": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3864": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3871": {
      "op": "SHL"
    },
    "3872": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3873": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3876": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3878": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3879": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "ADD",
      "path": "10"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3885": {
      "op": "DUP3"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207072652D73656C6563746564206E6F64652063616E2066696E6973"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3923": {
      "op": "DUP3"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "MSTORE"
    },
    "3926": {
      "op": "PUSH6",
      "value": "0x3410383630B7"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "MSTORE"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DA"
    },
    "3947": {
      "op": "JUMP"
    },
    "3948": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4322,
        4401
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3949": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x8"
    },
    "3951": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3952": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "ADD",
      "path": "10"
    },
    "3953": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3954": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3956": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3957": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3962": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3963": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3964": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4435,
        4449
      ],
      "op": "AND",
      "path": "10"
    },
    "3965": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "PUSH6",
      "path": "10",
      "value": "0x10000000000"
    },
    "3972": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3973": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3974": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "DIV",
      "path": "10"
    },
    "3975": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3976": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3977": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4431
      ],
      "op": "AND",
      "path": "10"
    },
    "3978": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4449
      ],
      "op": "LT",
      "path": "10"
    },
    "3979": {
      "branch": 37,
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4419,
        4449
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3980": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFD7"
    },
    "3983": {
      "branch": 37,
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3984": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3986": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3995": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4000": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4001": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "ADD",
      "path": "10"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4007": {
      "op": "DUP3"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "MSTORE"
    },
    "4010": {
      "op": "PUSH32",
      "value": "0x416C6C20726F756E6473206D75737420626520636F6D706C6574656400000000"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "MSTORE"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DA"
    },
    "4054": {
      "op": "JUMP"
    },
    "4055": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4411,
        4482
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4056": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 26
    },
    "4057": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4058": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFEC"
    },
    "4061": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4062": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4511
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4064": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4511
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4065": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4511
      ],
      "op": "ADD",
      "path": "10"
    },
    "4066": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4511
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4067": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4069": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4070": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "ADD",
      "path": "10"
    },
    "4071": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4072": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1027"
    },
    "4075": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "i",
      "offset": [
        4493,
        4522
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4076": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4493,
        4522
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4544
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 27,
      "value": "0x4"
    },
    "4080": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4544
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4081": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4544
      ],
      "op": "ADD",
      "path": "10"
    },
    "4082": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4083": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4086": {
      "op": "NOT"
    },
    "4087": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "AND",
      "path": "10"
    },
    "4088": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "4089": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4090": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4091": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "4092": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4093": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "4094": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "OR",
      "path": "10"
    },
    "4095": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4096": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4097": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4533,
        4553
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4575
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 28,
      "value": "0x5"
    },
    "4101": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4575
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4102": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4575
      ],
      "op": "ADD",
      "path": "10"
    },
    "4103": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4585
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4104": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4585
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4105": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4585
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4106": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4563,
        4585
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4107": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4607
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 29,
      "value": "0x6"
    },
    "4109": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4110": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4111": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4607
      ],
      "op": "ADD",
      "path": "10"
    },
    "4112": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4113": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4114": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4115": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4595,
        4617
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4116": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4627,
        4639
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 30,
      "value": "0x7"
    },
    "4118": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4627,
        4639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4119": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4627,
        4639
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4120": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4627,
        4639
      ],
      "op": "ADD",
      "path": "10"
    },
    "4121": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4627,
        4649
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4122": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4660,
        4681
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 31
    },
    "4123": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4660,
        4681
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4124": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "4130": {
      "op": "NOT"
    },
    "4131": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4660,
        4681
      ],
      "op": "AND",
      "path": "10"
    },
    "4132": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4660,
        4681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4133": {
      "fn": "TrainingPlans.finishPlan",
      "offset": [
        4660,
        4681
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4134": {
      "fn": "TrainingPlans.finishPlan",
      "jump": "o",
      "offset": [
        4085,
        4688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4135": {
      "op": "JUMPDEST"
    },
    "4136": {
      "op": "DUP3"
    },
    "4137": {
      "op": "DUP1"
    },
    "4138": {
      "op": "SLOAD"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0x1033"
    },
    "4142": {
      "op": "SWAP1"
    },
    "4143": {
      "op": "PUSH2",
      "value": "0x1411"
    },
    "4146": {
      "jump": "i",
      "op": "JUMP"
    },
    "4147": {
      "op": "JUMPDEST"
    },
    "4148": {
      "op": "SWAP1"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4151": {
      "op": "MSTORE"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4156": {
      "op": "KECCAK256"
    },
    "4157": {
      "op": "SWAP1"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4163": {
      "op": "SWAP1"
    },
    "4164": {
      "op": "DIV"
    },
    "4165": {
      "op": "DUP2"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "SWAP3"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4172": {
      "op": "JUMPI"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4175": {
      "op": "DUP6"
    },
    "4176": {
      "op": "SSTORE"
    },
    "4177": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4180": {
      "op": "JUMP"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "DUP3"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4185": {
      "op": "LT"
    },
    "4186": {
      "op": "PUSH2",
      "value": "0x106E"
    },
    "4189": {
      "op": "JUMPI"
    },
    "4190": {
      "op": "DUP1"
    },
    "4191": {
      "op": "MLOAD"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4194": {
      "op": "NOT"
    },
    "4195": {
      "op": "AND"
    },
    "4196": {
      "op": "DUP4"
    },
    "4197": {
      "op": "DUP1"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "OR"
    },
    "4200": {
      "op": "DUP6"
    },
    "4201": {
      "op": "SSTORE"
    },
    "4202": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4205": {
      "op": "JUMP"
    },
    "4206": {
      "op": "JUMPDEST"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "DUP1"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "op": "DUP6"
    },
    "4214": {
      "op": "SSTORE"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "ISZERO"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4220": {
      "op": "JUMPI"
    },
    "4221": {
      "op": "SWAP2"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "JUMPDEST"
    },
    "4225": {
      "op": "DUP3"
    },
    "4226": {
      "op": "DUP2"
    },
    "4227": {
      "op": "GT"
    },
    "4228": {
      "op": "ISZERO"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4232": {
      "op": "JUMPI"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "MLOAD"
    },
    "4235": {
      "op": "DUP3"
    },
    "4236": {
      "op": "SSTORE"
    },
    "4237": {
      "op": "SWAP2"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4240": {
      "op": "ADD"
    },
    "4241": {
      "op": "SWAP2"
    },
    "4242": {
      "op": "SWAP1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "SWAP1"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4250": {
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4256": {
      "op": "SWAP3"
    },
    "4257": {
      "op": "SWAP2"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x10AB"
    },
    "4262": {
      "jump": "i",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "op": "SWAP1"
    },
    "4266": {
      "jump": "o",
      "op": "JUMP"
    },
    "4267": {
      "op": "JUMPDEST"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "DUP1"
    },
    "4270": {
      "op": "DUP3"
    },
    "4271": {
      "op": "GT"
    },
    "4272": {
      "op": "ISZERO"
    },
    "4273": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4276": {
      "op": "JUMPI"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4279": {
      "op": "DUP2"
    },
    "4280": {
      "op": "SSTORE"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "ADD"
    },
    "4284": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4287": {
      "op": "JUMP"
    },
    "4288": {
      "op": "JUMPDEST"
    },
    "4289": {
      "op": "DUP1"
    },
    "4290": {
      "op": "CALLDATALOAD"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "op": "SUB"
    },
    "4299": {
      "op": "DUP2"
    },
    "4300": {
      "op": "AND"
    },
    "4301": {
      "op": "DUP2"
    },
    "4302": {
      "op": "EQ"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4306": {
      "op": "JUMPI"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4309": {
      "op": "DUP1"
    },
    "4310": {
      "op": "REVERT"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "SWAP2"
    },
    "4313": {
      "op": "SWAP1"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "jump": "o",
      "op": "JUMP"
    },
    "4316": {
      "op": "JUMPDEST"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "DUP5"
    },
    "4323": {
      "op": "SUB"
    },
    "4324": {
      "op": "SLT"
    },
    "4325": {
      "op": "ISZERO"
    },
    "4326": {
      "op": "PUSH2",
      "value": "0x10EE"
    },
    "4329": {
      "op": "JUMPI"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4332": {
      "op": "DUP1"
    },
    "4333": {
      "op": "REVERT"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "PUSH2",
      "value": "0x10C0"
    },
    "4342": {
      "jump": "i",
      "op": "JUMP"
    },
    "4343": {
      "op": "JUMPDEST"
    },
    "4344": {
      "op": "SWAP4"
    },
    "4345": {
      "op": "SWAP3"
    },
    "4346": {
      "op": "POP"
    },
    "4347": {
      "op": "POP"
    },
    "4348": {
      "op": "POP"
    },
    "4349": {
      "jump": "o",
      "op": "JUMP"
    },
    "4350": {
      "op": "JUMPDEST"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4353": {
      "op": "DUP1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4356": {
      "op": "DUP4"
    },
    "4357": {
      "op": "DUP6"
    },
    "4358": {
      "op": "SUB"
    },
    "4359": {
      "op": "SLT"
    },
    "4360": {
      "op": "ISZERO"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1111"
    },
    "4364": {
      "op": "JUMPI"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4367": {
      "op": "DUP1"
    },
    "4368": {
      "op": "REVERT"
    },
    "4369": {
      "op": "JUMPDEST"
    },
    "4370": {
      "op": "DUP3"
    },
    "4371": {
      "op": "CALLDATALOAD"
    },
    "4372": {
      "op": "SWAP2"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4379": {
      "op": "DUP5"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x10C0"
    },
    "4384": {
      "jump": "i",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "SWAP1"
    },
    "4387": {
      "op": "POP"
    },
    "4388": {
      "op": "SWAP3"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "op": "SWAP3"
    },
    "4391": {
      "op": "SWAP1"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "jump": "o",
      "op": "JUMP"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4397": {
      "op": "DUP2"
    },
    "4398": {
      "op": "MLOAD"
    },
    "4399": {
      "op": "DUP1"
    },
    "4400": {
      "op": "DUP5"
    },
    "4401": {
      "op": "MSTORE"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "JUMPDEST"
    },
    "4405": {
      "op": "DUP2"
    },
    "4406": {
      "op": "DUP2"
    },
    "4407": {
      "op": "LT"
    },
    "4408": {
      "op": "ISZERO"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x1150"
    },
    "4412": {
      "op": "JUMPI"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4415": {
      "op": "DUP2"
    },
    "4416": {
      "op": "DUP6"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "DUP2"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "op": "MLOAD"
    },
    "4421": {
      "op": "DUP7"
    },
    "4422": {
      "op": "DUP4"
    },
    "4423": {
      "op": "ADD"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1134"
    },
    "4431": {
      "op": "JUMP"
    },
    "4432": {
      "op": "JUMPDEST"
    },
    "4433": {
      "op": "DUP2"
    },
    "4434": {
      "op": "DUP2"
    },
    "4435": {
      "op": "GT"
    },
    "4436": {
      "op": "ISZERO"
    },
    "4437": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4440": {
      "op": "JUMPI"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4445": {
      "op": "DUP4"
    },
    "4446": {
      "op": "DUP8"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4457": {
      "op": "NOT"
    },
    "4458": {
      "op": "AND"
    },
    "4459": {
      "op": "SWAP3"
    },
    "4460": {
      "op": "SWAP1"
    },
    "4461": {
      "op": "SWAP3"
    },
    "4462": {
      "op": "ADD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4465": {
      "op": "ADD"
    },
    "4466": {
      "op": "SWAP3"
    },
    "4467": {
      "op": "SWAP2"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "op": "POP"
    },
    "4470": {
      "jump": "o",
      "op": "JUMP"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4474": {
      "op": "DUP2"
    },
    "4475": {
      "op": "MSTORE"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4478": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4483": {
      "op": "DUP4"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "DUP5"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4489": {
      "jump": "i",
      "op": "JUMP"
    },
    "4490": {
      "op": "JUMPDEST"
    },
    "4491": {
      "op": "DUP1"
    },
    "4492": {
      "op": "CALLDATALOAD"
    },
    "4493": {
      "op": "DUP1"
    },
    "4494": {
      "op": "ISZERO"
    },
    "4495": {
      "op": "ISZERO"
    },
    "4496": {
      "op": "DUP2"
    },
    "4497": {
      "op": "EQ"
    },
    "4498": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4501": {
      "op": "JUMPI"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4504": {
      "op": "DUP1"
    },
    "4505": {
      "op": "REVERT"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4512": {
      "op": "DUP4"
    },
    "4513": {
      "op": "DUP6"
    },
    "4514": {
      "op": "SUB"
    },
    "4515": {
      "op": "SLT"
    },
    "4516": {
      "op": "ISZERO"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x11AD"
    },
    "4520": {
      "op": "JUMPI"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4523": {
      "op": "DUP1"
    },
    "4524": {
      "op": "REVERT"
    },
    "4525": {
      "op": "JUMPDEST"
    },
    "4526": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "4529": {
      "op": "DUP4"
    },
    "4530": {
      "op": "PUSH2",
      "value": "0x118A"
    },
    "4533": {
      "jump": "i",
      "op": "JUMP"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "SWAP5"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4538": {
      "op": "SWAP4"
    },
    "4539": {
      "op": "SWAP1"
    },
    "4540": {
      "op": "SWAP4"
    },
    "4541": {
      "op": "ADD"
    },
    "4542": {
      "op": "CALLDATALOAD"
    },
    "4543": {
      "op": "SWAP4"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "jump": "o",
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "DUP1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4554": {
      "op": "DUP1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4557": {
      "op": "DUP6"
    },
    "4558": {
      "op": "DUP8"
    },
    "4559": {
      "op": "SUB"
    },
    "4560": {
      "op": "SLT"
    },
    "4561": {
      "op": "ISZERO"
    },
    "4562": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4565": {
      "op": "JUMPI"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4568": {
      "op": "DUP1"
    },
    "4569": {
      "op": "REVERT"
    },
    "4570": {
      "op": "JUMPDEST"
    },
    "4571": {
      "op": "PUSH2",
      "value": "0x11E3"
    },
    "4574": {
      "op": "DUP6"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x118A"
    },
    "4578": {
      "jump": "i",
      "op": "JUMP"
    },
    "4579": {
      "op": "JUMPDEST"
    },
    "4580": {
      "op": "SWAP7"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4583": {
      "op": "DUP7"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "op": "CALLDATALOAD"
    },
    "4586": {
      "op": "SWAP7"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4590": {
      "op": "DUP7"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "CALLDATALOAD"
    },
    "4593": {
      "op": "SWAP6"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "op": "CALLDATALOAD"
    },
    "4598": {
      "op": "SWAP5"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "SWAP3"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "jump": "o",
      "op": "JUMP"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "DUP5"
    },
    "4612": {
      "op": "SUB"
    },
    "4613": {
      "op": "SLT"
    },
    "4614": {
      "op": "ISZERO"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x120F"
    },
    "4618": {
      "op": "JUMPI"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4621": {
      "op": "DUP1"
    },
    "4622": {
      "op": "REVERT"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "op": "CALLDATALOAD"
    },
    "4626": {
      "op": "SWAP2"
    },
    "4627": {
      "op": "SWAP1"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "jump": "o",
      "op": "JUMP"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4635": {
      "op": "DUP3"
    },
    "4636": {
      "op": "DUP5"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "op": "SLT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "DUP1"
    },
    "4647": {
      "op": "REVERT"
    },
    "4648": {
      "op": "JUMPDEST"
    },
    "4649": {
      "op": "PUSH2",
      "value": "0x10F7"
    },
    "4652": {
      "op": "DUP3"
    },
    "4653": {
      "op": "PUSH2",
      "value": "0x118A"
    },
    "4656": {
      "jump": "i",
      "op": "JUMP"
    },
    "4657": {
      "op": "JUMPDEST"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4664": {
      "op": "SHL"
    },
    "4665": {
      "op": "SUB"
    },
    "4666": {
      "op": "DUP16"
    },
    "4667": {
      "op": "DUP2"
    },
    "4668": {
      "op": "AND"
    },
    "4669": {
      "op": "DUP3"
    },
    "4670": {
      "op": "MSTORE"
    },
    "4671": {
      "op": "DUP15"
    },
    "4672": {
      "op": "AND"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4675": {
      "op": "DUP3"
    },
    "4676": {
      "op": "ADD"
    },
    "4677": {
      "op": "MSTORE"
    },
    "4678": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4683": {
      "op": "DUP14"
    },
    "4684": {
      "op": "AND"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "ADD"
    },
    "4689": {
      "op": "MSTORE"
    },
    "4690": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4695": {
      "op": "DUP3"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "op": "MSTORE"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4700": {
      "op": "PUSH2",
      "value": "0x1269"
    },
    "4703": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "4706": {
      "op": "DUP4"
    },
    "4707": {
      "op": "ADD"
    },
    "4708": {
      "op": "DUP15"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4712": {
      "jump": "i",
      "op": "JUMP"
    },
    "4713": {
      "op": "JUMPDEST"
    },
    "4714": {
      "op": "DUP3"
    },
    "4715": {
      "op": "DUP2"
    },
    "4716": {
      "op": "SUB"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4719": {
      "op": "DUP5"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "MSTORE"
    },
    "4722": {
      "op": "PUSH2",
      "value": "0x127B"
    },
    "4725": {
      "op": "DUP2"
    },
    "4726": {
      "op": "DUP15"
    },
    "4727": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4730": {
      "jump": "i",
      "op": "JUMP"
    },
    "4731": {
      "op": "JUMPDEST"
    },
    "4732": {
      "op": "SWAP2"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4740": {
      "op": "DUP4"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "DUP13"
    },
    "4743": {
      "op": "ISZERO"
    },
    "4744": {
      "op": "ISZERO"
    },
    "4745": {
      "op": "SWAP1"
    },
    "4746": {
      "op": "MSTORE"
    },
    "4747": {
      "op": "JUMP"
    },
    "4748": {
      "op": "JUMPDEST"
    },
    "4749": {
      "op": "DUP10"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4752": {
      "op": "DUP4"
    },
    "4753": {
      "op": "ADD"
    },
    "4754": {
      "op": "MSTORE"
    },
    "4755": {
      "op": "DUP9"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4758": {
      "op": "DUP4"
    },
    "4759": {
      "op": "ADD"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "DUP8"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4765": {
      "op": "DUP4"
    },
    "4766": {
      "op": "ADD"
    },
    "4767": {
      "op": "MSTORE"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x12B2"
    },
    "4771": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4774": {
      "op": "DUP4"
    },
    "4775": {
      "op": "ADD"
    },
    "4776": {
      "op": "DUP9"
    },
    "4777": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4782": {
      "op": "AND"
    },
    "4783": {
      "op": "SWAP1"
    },
    "4784": {
      "op": "MSTORE"
    },
    "4785": {
      "op": "JUMP"
    },
    "4786": {
      "op": "JUMPDEST"
    },
    "4787": {
      "op": "DUP6"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4791": {
      "op": "DUP4"
    },
    "4792": {
      "op": "ADD"
    },
    "4793": {
      "op": "MSTORE"
    },
    "4794": {
      "op": "DUP5"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4798": {
      "op": "DUP4"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "DUP4"
    },
    "4802": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "4805": {
      "op": "DUP4"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "op": "MSTORE"
    },
    "4808": {
      "op": "DUP3"
    },
    "4809": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "4812": {
      "op": "DUP4"
    },
    "4813": {
      "op": "ADD"
    },
    "4814": {
      "op": "MSTORE"
    },
    "4815": {
      "op": "SWAP16"
    },
    "4816": {
      "op": "SWAP15"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "op": "POP"
    },
    "4823": {
      "op": "POP"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "jump": "o",
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4844": {
      "op": "MSTORE"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4849": {
      "op": "MSTORE"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4854": {
      "op": "REVERT"
    },
    "4855": {
      "op": "JUMPDEST"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4858": {
      "op": "DUP1"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4861": {
      "op": "DUP1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4866": {
      "op": "DUP7"
    },
    "4867": {
      "op": "DUP9"
    },
    "4868": {
      "op": "SUB"
    },
    "4869": {
      "op": "SLT"
    },
    "4870": {
      "op": "ISZERO"
    },
    "4871": {
      "op": "PUSH2",
      "value": "0x130F"
    },
    "4874": {
      "op": "JUMPI"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4877": {
      "op": "DUP1"
    },
    "4878": {
      "op": "REVERT"
    },
    "4879": {
      "op": "JUMPDEST"
    },
    "4880": {
      "op": "PUSH2",
      "value": "0x1318"
    },
    "4883": {
      "op": "DUP7"
    },
    "4884": {
      "op": "PUSH2",
      "value": "0x118A"
    },
    "4887": {
      "jump": "i",
      "op": "JUMP"
    },
    "4888": {
      "op": "JUMPDEST"
    },
    "4889": {
      "op": "SWAP5"
    },
    "4890": {
      "op": "POP"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4893": {
      "op": "DUP7"
    },
    "4894": {
      "op": "ADD"
    },
    "4895": {
      "op": "CALLDATALOAD"
    },
    "4896": {
      "op": "SWAP4"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4900": {
      "op": "DUP7"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "CALLDATALOAD"
    },
    "4903": {
      "op": "SWAP3"
    },
    "4904": {
      "op": "POP"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4907": {
      "op": "DUP7"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "CALLDATALOAD"
    },
    "4910": {
      "op": "SWAP2"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4914": {
      "op": "DUP7"
    },
    "4915": {
      "op": "ADD"
    },
    "4916": {
      "op": "CALLDATALOAD"
    },
    "4917": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4926": {
      "op": "DUP1"
    },
    "4927": {
      "op": "DUP3"
    },
    "4928": {
      "op": "GT"
    },
    "4929": {
      "op": "ISZERO"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x134A"
    },
    "4933": {
      "op": "JUMPI"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4936": {
      "op": "DUP1"
    },
    "4937": {
      "op": "REVERT"
    },
    "4938": {
      "op": "JUMPDEST"
    },
    "4939": {
      "op": "DUP2"
    },
    "4940": {
      "op": "DUP9"
    },
    "4941": {
      "op": "ADD"
    },
    "4942": {
      "op": "SWAP2"
    },
    "4943": {
      "op": "POP"
    },
    "4944": {
      "op": "DUP9"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4947": {
      "op": "DUP4"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "SLT"
    },
    "4950": {
      "op": "PUSH2",
      "value": "0x135E"
    },
    "4953": {
      "op": "JUMPI"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4956": {
      "op": "DUP1"
    },
    "4957": {
      "op": "REVERT"
    },
    "4958": {
      "op": "JUMPDEST"
    },
    "4959": {
      "op": "DUP2"
    },
    "4960": {
      "op": "CALLDATALOAD"
    },
    "4961": {
      "op": "DUP2"
    },
    "4962": {
      "op": "DUP2"
    },
    "4963": {
      "op": "GT"
    },
    "4964": {
      "op": "ISZERO"
    },
    "4965": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4968": {
      "op": "JUMPI"
    },
    "4969": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4972": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4975": {
      "jump": "i",
      "op": "JUMP"
    },
    "4976": {
      "op": "JUMPDEST"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4979": {
      "op": "MLOAD"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4982": {
      "op": "DUP3"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4986": {
      "op": "NOT"
    },
    "4987": {
      "op": "SWAP1"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "AND"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4992": {
      "op": "ADD"
    },
    "4993": {
      "op": "AND"
    },
    "4994": {
      "op": "DUP2"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "SWAP1"
    },
    "4997": {
      "op": "DUP4"
    },
    "4998": {
      "op": "DUP3"
    },
    "4999": {
      "op": "GT"
    },
    "5000": {
      "op": "DUP2"
    },
    "5001": {
      "op": "DUP4"
    },
    "5002": {
      "op": "LT"
    },
    "5003": {
      "op": "OR"
    },
    "5004": {
      "op": "ISZERO"
    },
    "5005": {
      "op": "PUSH2",
      "value": "0x1398"
    },
    "5008": {
      "op": "JUMPI"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x1398"
    },
    "5012": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "5015": {
      "jump": "i",
      "op": "JUMP"
    },
    "5016": {
      "op": "JUMPDEST"
    },
    "5017": {
      "op": "DUP2"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5020": {
      "op": "MSTORE"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "DUP2"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "DUP12"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5027": {
      "op": "DUP5"
    },
    "5028": {
      "op": "DUP8"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "op": "GT"
    },
    "5032": {
      "op": "ISZERO"
    },
    "5033": {
      "op": "PUSH2",
      "value": "0x13B1"
    },
    "5036": {
      "op": "JUMPI"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5039": {
      "op": "DUP1"
    },
    "5040": {
      "op": "REVERT"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "DUP3"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5045": {
      "op": "DUP7"
    },
    "5046": {
      "op": "ADD"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5049": {
      "op": "DUP4"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "CALLDATACOPY"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5056": {
      "op": "DUP5"
    },
    "5057": {
      "op": "DUP4"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "ADD"
    },
    "5060": {
      "op": "MSTORE"
    },
    "5061": {
      "op": "DUP1"
    },
    "5062": {
      "op": "SWAP6"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "SWAP3"
    },
    "5070": {
      "op": "SWAP6"
    },
    "5071": {
      "op": "POP"
    },
    "5072": {
      "op": "SWAP3"
    },
    "5073": {
      "op": "SWAP6"
    },
    "5074": {
      "op": "SWAP1"
    },
    "5075": {
      "op": "SWAP4"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "jump": "o",
      "op": "JUMP"
    },
    "5078": {
      "op": "JUMPDEST"
    },
    "5079": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5089": {
      "op": "MSTORE"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5094": {
      "op": "MSTORE"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5099": {
      "op": "REVERT"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5103": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5108": {
      "op": "DUP4"
    },
    "5109": {
      "op": "DUP2"
    },
    "5110": {
      "op": "AND"
    },
    "5111": {
      "op": "SWAP1"
    },
    "5112": {
      "op": "DUP4"
    },
    "5113": {
      "op": "AND"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "DUP2"
    },
    "5116": {
      "op": "LT"
    },
    "5117": {
      "op": "ISZERO"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x1409"
    },
    "5121": {
      "op": "JUMPI"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x1409"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x13D6"
    },
    "5128": {
      "jump": "i",
      "op": "JUMP"
    },
    "5129": {
      "op": "JUMPDEST"
    },
    "5130": {
      "op": "SUB"
    },
    "5131": {
      "op": "SWAP4"
    },
    "5132": {
      "op": "SWAP3"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "op": "POP"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "jump": "o",
      "op": "JUMP"
    },
    "5137": {
      "op": "JUMPDEST"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "DUP2"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "SHR"
    },
    "5143": {
      "op": "SWAP1"
    },
    "5144": {
      "op": "DUP3"
    },
    "5145": {
      "op": "AND"
    },
    "5146": {
      "op": "DUP1"
    },
    "5147": {
      "op": "PUSH2",
      "value": "0x1425"
    },
    "5150": {
      "op": "JUMPI"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "AND"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "JUMPDEST"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5160": {
      "op": "DUP3"
    },
    "5161": {
      "op": "LT"
    },
    "5162": {
      "op": "DUP2"
    },
    "5163": {
      "op": "EQ"
    },
    "5164": {
      "op": "ISZERO"
    },
    "5165": {
      "op": "PUSH2",
      "value": "0x1446"
    },
    "5168": {
      "op": "JUMPI"
    },
    "5169": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5176": {
      "op": "SHL"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5179": {
      "op": "MSTORE"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5189": {
      "op": "REVERT"
    },
    "5190": {
      "op": "JUMPDEST"
    },
    "5191": {
      "op": "POP"
    },
    "5192": {
      "op": "SWAP2"
    },
    "5193": {
      "op": "SWAP1"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "jump": "o",
      "op": "JUMP"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5199": {
      "op": "DUP1"
    },
    "5200": {
      "op": "DUP3"
    },
    "5201": {
      "op": "MSTORE"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "5204": {
      "op": "SWAP1"
    },
    "5205": {
      "op": "DUP3"
    },
    "5206": {
      "op": "ADD"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206E6F6465732061726520616C6C6F77656420746F20657865637574"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5243": {
      "op": "DUP3"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "op": "MSTORE"
    },
    "5246": {
      "op": "PUSH7",
      "value": "0x32903A3434B997"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5259": {
      "op": "DUP3"
    },
    "5260": {
      "op": "ADD"
    },
    "5261": {
      "op": "MSTORE"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "SWAP1"
    },
    "5266": {
      "jump": "o",
      "op": "JUMP"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "NOT"
    },
    "5272": {
      "op": "DUP3"
    },
    "5273": {
      "op": "GT"
    },
    "5274": {
      "op": "ISZERO"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x14A6"
    },
    "5278": {
      "op": "JUMPI"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14A6"
    },
    "5282": {
      "op": "PUSH2",
      "value": "0x13D6"
    },
    "5285": {
      "jump": "i",
      "op": "JUMP"
    },
    "5286": {
      "op": "JUMPDEST"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "op": "SWAP1"
    },
    "5290": {
      "jump": "o",
      "op": "JUMP"
    },
    "5291": {
      "op": "JUMPDEST"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5294": {
      "op": "DUP3"
    },
    "5295": {
      "op": "DUP3"
    },
    "5296": {
      "op": "LT"
    },
    "5297": {
      "op": "ISZERO"
    },
    "5298": {
      "op": "PUSH2",
      "value": "0x14BD"
    },
    "5301": {
      "op": "JUMPI"
    },
    "5302": {
      "op": "PUSH2",
      "value": "0x14BD"
    },
    "5305": {
      "op": "PUSH2",
      "value": "0x13D6"
    },
    "5308": {
      "jump": "i",
      "op": "JUMP"
    },
    "5309": {
      "op": "JUMPDEST"
    },
    "5310": {
      "op": "POP"
    },
    "5311": {
      "op": "SUB"
    },
    "5312": {
      "op": "SWAP1"
    },
    "5313": {
      "jump": "o",
      "op": "JUMP"
    },
    "5314": {
      "op": "JUMPDEST"
    },
    "5315": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5322": {
      "op": "SHL"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5330": {
      "op": "MSTORE"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5335": {
      "op": "REVERT"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5339": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5344": {
      "op": "DUP1"
    },
    "5345": {
      "op": "DUP4"
    },
    "5346": {
      "op": "AND"
    },
    "5347": {
      "op": "DUP2"
    },
    "5348": {
      "op": "DUP6"
    },
    "5349": {
      "op": "AND"
    },
    "5350": {
      "op": "DUP1"
    },
    "5351": {
      "op": "DUP4"
    },
    "5352": {
      "op": "SUB"
    },
    "5353": {
      "op": "DUP3"
    },
    "5354": {
      "op": "GT"
    },
    "5355": {
      "op": "ISZERO"
    },
    "5356": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5359": {
      "op": "JUMPI"
    },
    "5360": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x13D6"
    },
    "5366": {
      "jump": "i",
      "op": "JUMP"
    },
    "5367": {
      "op": "JUMPDEST"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "op": "SWAP5"
    },
    "5370": {
      "op": "SWAP4"
    },
    "5371": {
      "op": "POP"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "jump": "o",
      "op": "JUMP"
    },
    "5376": {
      "op": "JUMPDEST"
    },
    "5377": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5387": {
      "op": "MSTORE"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5392": {
      "op": "MSTORE"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5397": {
      "op": "REVERT"
    }
  },
  "sha1": "52b8b972c0e2e06de8f319d8c18c09269c7b3a18",
  "source": "// SPDX-License-Identifier: GPL3\npragma solidity ^0.8.0;\n\nimport \"./Builders.sol\";\nimport \"./DataProviders.sol\";\n\n/**\n * @dev A contract that manages the training plans for the project.\n * There is always only 1 plan running at a time. All the plans are\n * stored on the blockchain\n */\ncontract TrainingPlans is Builders, DataProviders {\n    // Training Plan Round\n    struct Round {\n        bool completed;\n        uint numSubmitted;\n        mapping(address => string) modelsCID;\n    }\n\n    // Training Plan defines instructions for training clients (data providers)\n    struct TrainingPlan {\n        // bytes data;\n        address creator;\n        address finalNode;\n        uint32 randomSeed;\n\n        // Base model uploaded by builder\n        string baseModelCID;\n        // Final model uploaded by finalNode\n        string finalModelCID;\n\n        // Secret for sharing with builder\n        // TODO: maybe change to single array of 97 bytes\n        bool parity;\n        bytes32 secret0;\n        bytes32 secret1;\n        bytes32 secret2;\n\n        // Training params\n        uint32 numRounds;\n\n        // Number of nodes and rewards in training\n        uint numNodes;\n        uint totalReward;\n        uint nodeReward;\n\n        uint keyTurn;\n\n        // mapping (acting as array) of rounds\n        mapping(uint => Round) rounds;\n    }\n\n    mapping(uint => TrainingPlan) public plans;\n    uint32 public numPlans = 0;\n\n    bool public isPlanRunning = false;\n    uint32 public currentRound = 0;\n\n    // seed for pseudo random number generator\n    uint256 private _seed = 7;\n\n\n    function _calculateTotalReward(uint32 _rounds, uint _reward) internal view returns (uint) {\n        return uint(_rounds) * _reward * activeNodes;\n    }\n\n    // TODO: Add Chainlink Keeper to close round if time elapses\n    function _saveModel(string memory modelCID) internal onlyNode {\n        require(\n            currentRound < plans[numPlans - 1].numRounds,\n            \"No more rounds to perform.\"\n        );\n\n        Round storage round = plans[numPlans - 1].rounds[currentRound];\n        require(\n            bytes(round.modelsCID[msg.sender]).length == 0,\n            \"Model already sent for this round\"\n        );\n\n        // Store model CID and finish in case it is last\n        round.modelsCID[msg.sender] = modelCID;\n        round.numSubmitted += 1;\n        if (round.numSubmitted >= activeNodes) {\n            round.completed = true;\n            currentRound += 1;\n        }\n    }\n\n    function getRoundModel(uint roundIdx, address nodeAddress) public view returns(string memory) {\n        require(numPlans > 0, \"No training plans created\");\n        return plans[numPlans - 1].rounds[roundIdx].modelsCID[nodeAddress];\n    }\n\n    function _addPlan(string memory modelCID, uint32 rounds, uint reward) internal onlyBuilder {\n        require(!isPlanRunning, \"Another plan is already being executed\");\n        require(activeNodes > 0, \"No active nodes to execute the plan\");\n\n        TrainingPlan storage plan = plans[numPlans++];\n        plan.creator = msg.sender;\n        plan.baseModelCID = modelCID;\n        plan.numRounds = rounds;\n        plan.numNodes = activeNodes;\n        plan.nodeReward = reward;\n        plan.totalReward = _calculateTotalReward(rounds, reward);\n        plan.keyTurn = keyTurn;\n\n        uint256 randNum = _getRandomNumber();\n\n        // TODO: Deal better with inactive nodes so it is more fair\n        uint256 i = randNum % nodesArray.length;\n        for (; !nodesArray[i % nodesArray.length].activated; ++i) {}\n\n        plan.finalNode = nodesArray[i % nodesArray.length]._address;\n        plan.randomSeed = uint32(randNum);\n\n        currentRound = 0;\n        isPlanRunning = true;\n    }\n\n    // Abort plan\n    function abortPlan() public {\n        require(\n            numPlans > 0 && plans[numPlans - 1].creator == msg.sender,\n            \"Only creator can abort the plan\"\n        );\n        isPlanRunning = false;\n    }\n\n    // Finish plan\n    // IMPORTANT: Use combination of seed and secret to generate builder secret\n    // TODO add verification by other nodes\n    function finishPlan(\n        bool parity,\n        bytes32 secret0,\n        bytes32 secret1,\n        bytes32 secret2,\n        string memory modelCID\n    ) public onlyNode {\n        TrainingPlan storage plan = plans[numPlans - 1];\n        require(plan.finalNode == msg.sender, \"Only pre-selected node can finish plan\");\n        require(currentRound >= plan.numRounds, \"All rounds must be completed\");\n\n        plan.finalModelCID = modelCID;\n\n        plan.parity = parity;\n        plan.secret0 = secret0;\n        plan.secret1 = secret1;\n        plan.secret2 = secret2;\n\n        isPlanRunning = false;\n    }\n\n\n    /** Function node can become active/inactive */\n    function changeNodeStatus(bool status) public onlyNode {\n        require(!isPlanRunning, \"Node can't change status while plan running.\");\n        if (nodesArray[nodeState[msg.sender] - 3].activated != status) {\n            activeNodes = (status) ? activeNodes + 1 : activeNodes - 1;\n        }\n        nodesArray[nodeState[msg.sender] - 3].activated = status;\n    }\n\n    // get pseudo random number\n    function _getRandomNumber() private returns (uint256) {\n        _seed = uint256(keccak256(abi.encodePacked(_seed, blockhash(block.number - 1), block.coinbase, block.difficulty)));\n        return _seed;\n    }\n}\n",
  "sourceMap": "286:5072:10:-:0;;;942:29:9;;;-1:-1:-1;;;;;;977:25:9;;;1390:26:10;;;-1:-1:-1;;;;;;1462:30:10;;;1570:1;1546:25;;286:5072;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/project/TrainingPlans.sol",
  "type": "contract"
}